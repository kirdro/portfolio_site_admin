import { getToken } from "next-auth/jwt";
import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

export async function middleware(request: NextRequest) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ JWT
  const token = await getToken({ req: request });
  
  // –ò—Å–∫–ª—é—á–∞–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—É—Ç–∏ –æ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
  const isPublicPath = 
    request.nextUrl.pathname.startsWith('/api/auth') ||
    request.nextUrl.pathname.startsWith('/auth') ||
    request.nextUrl.pathname.startsWith('/_next') ||
    request.nextUrl.pathname === '/favicon.ico';

  if (isPublicPath) {
    return NextResponse.next();
  }

  // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
  console.log(`üõ°Ô∏è  Middleware: ${request.nextUrl.pathname}`);
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${token?.email || '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}`);
  console.log(`üé≠ –†–æ–ª—å: ${token?.role || '–ù–µ—Ç —Ä–æ–ª–∏'}`);

  // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ - —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
  if (!token) {
    console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω`);
    return NextResponse.redirect(new URL("/auth/signin", request.url));
  }

  // –í–†–ï–ú–ï–ù–ù–û: —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –ª—é–±–æ–º—É –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  // TODO: –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: token.email !== "kirdro@yandex.ru" || token.role !== "ADMIN"
  console.log(`üîì –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú: –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–ª—è ${token.email} (—Ä–æ–ª—å: ${token.role})`);

  console.log(`‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–ª—è ${token.email}`);
  return NextResponse.next();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Ç—á–µ—Ä–∞ - –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º
export const config = {
  matcher: [
    // –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫–æ –≤—Å–µ–º –º–∞—Ä—à—Ä—É—Ç–∞–º
    '/((?!_next/static|_next/image|favicon.ico).*)',
  ],
};