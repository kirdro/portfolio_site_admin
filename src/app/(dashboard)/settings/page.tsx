"use client";

import React, { useState, useCallback } from "react";
import AdminLayout from "../../../components/AdminLayout";
import { SystemSettings } from "../../../components/admin/settings/SystemSettings";
import { DatabaseStatus } from "../../../components/admin/settings/DatabaseStatus";
import { SecuritySettings } from "../../../components/admin/settings/SecuritySettings";

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
export interface SettingsData {
  siteName: string;
  siteDescription: string;
  adminEmail: string;
  maintenanceMode: boolean;
  debugMode: boolean;
  allowRegistration: boolean;
  maxFileUploadSize: number; // –≤ MB
  sessionTimeout: number; // –≤ –º–∏–Ω—É—Ç–∞—Ö
  backupFrequency: "daily" | "weekly" | "monthly";
  emailNotifications: boolean;
  darkMode: boolean;
  language: "ru" | "en";
}

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
export interface SystemStatus {
  server: {
    status: "online" | "offline" | "maintenance";
    uptime: string;
    version: string;
    port: number;
  };
  database: {
    status: "connected" | "disconnected" | "error";
    version: string;
    connections: number;
    size: string;
  };
  memory: {
    used: number;
    total: number;
    usage: number;
  };
  disk: {
    used: string;
    total: string;
    usage: number;
  };
}

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
 */
export default function SettingsPage() {

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const [activeTab, setActiveTab] = useState<"general" | "database" | "security">("general");

  // Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  const mockSettings: SettingsData = {
    siteName: "KIRDRO.RU Admin Panel",
    siteDescription: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ-—Å–∞–π—Ç–∞ —Å –∫–∏–±–µ—Ä–ø–∞–Ω–∫ –¥–∏–∑–∞–π–Ω–æ–º",
    adminEmail: "kirdro@yandex.ru",
    maintenanceMode: false,
    debugMode: false,
    allowRegistration: false,
    maxFileUploadSize: 10,
    sessionTimeout: 60,
    backupFrequency: "daily",
    emailNotifications: true,
    darkMode: true,
    language: "ru",
  };

  const mockSystemStatus: SystemStatus = {
    server: {
      status: "online",
      uptime: "3 –¥–Ω—è 14 —á–∞—Å–æ–≤",
      version: "Next.js 15.5.2",
      port: 3007,
    },
    database: {
      status: "connected",
      version: "PostgreSQL 15.3",
      connections: 12,
      size: "47.2 MB",
    },
    memory: {
      used: 234,
      total: 512,
      usage: 46,
    },
    disk: {
      used: "1.2 GB",
      total: "10 GB",
      usage: 12,
    },
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏ = useCallback((tab: "general" | "database" | "security") => {
    setActiveTab(tab);
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–ù–∞—Å—Ç—Ä–æ–µ–∫ = useCallback((updatedSettings: Partial<SettingsData>) => {
    // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ tRPC –º—É—Ç–∞—Ü–∏–∏
    console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:", updatedSettings);
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏–°–∏—Å—Ç–µ–º—ã = useCallback(() => {
    if (confirm("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É? –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.")) {
      // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ tRPC –º—É—Ç–∞—Ü–∏–∏
      console.log("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã...");
    }
  }, []);

  return (
    <AdminLayout>
      <div className="space-y-6">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-neon glyph-glow">
              ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </h1>
            <p className="text-soft text-sm mt-1">
              –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
            </p>
          </div>
        </div>

        {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <div className="bg-panel border border-line rounded-lg bevel p-4">
            <div className="flex items-center justify-between">
              <div>
                <div className={`text-2xl font-bold glyph-glow ${
                  mockSystemStatus.server.status === "online" ? "text-green-400" : 
                  mockSystemStatus.server.status === "maintenance" ? "text-yellow-400" : "text-red-400"
                }`}>
                  {mockSystemStatus.server.status === "online" && "ONLINE"}
                  {mockSystemStatus.server.status === "maintenance" && "MAINT"}
                  {mockSystemStatus.server.status === "offline" && "OFFLINE"}
                </div>
                <div className="text-sm text-soft">–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞</div>
              </div>
              <div className={`text-2xl ${
                mockSystemStatus.server.status === "online" ? "text-green-400" : 
                mockSystemStatus.server.status === "maintenance" ? "text-yellow-400" : "text-red-400"
              }`}>
                üñ•Ô∏è
              </div>
            </div>
          </div>

          <div className="bg-panel border border-line rounded-lg bevel p-4">
            <div className="flex items-center justify-between">
              <div>
                <div className={`text-2xl font-bold glyph-glow ${
                  mockSystemStatus.database.status === "connected" ? "text-green-400" : "text-red-400"
                }`}>
                  {mockSystemStatus.database.connections}
                </div>
                <div className="text-sm text-soft">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ë–î</div>
              </div>
              <div className={`text-2xl ${
                mockSystemStatus.database.status === "connected" ? "text-green-400" : "text-red-400"
              }`}>
                üóÑÔ∏è
              </div>
            </div>
          </div>

          <div className="bg-panel border border-line rounded-lg bevel p-4">
            <div className="flex items-center justify-between">
              <div>
                <div className={`text-2xl font-bold glyph-glow ${
                  mockSystemStatus.memory.usage < 50 ? "text-green-400" :
                  mockSystemStatus.memory.usage < 80 ? "text-yellow-400" : "text-red-400"
                }`}>
                  {mockSystemStatus.memory.usage}%
                </div>
                <div className="text-sm text-soft">–ü–∞–º—è—Ç—å</div>
              </div>
              <div className={`text-2xl ${
                mockSystemStatus.memory.usage < 50 ? "text-green-400" :
                mockSystemStatus.memory.usage < 80 ? "text-yellow-400" : "text-red-400"
              }`}>
                üíæ
              </div>
            </div>
          </div>

          <div className="bg-panel border border-line rounded-lg bevel p-4">
            <div className="flex items-center justify-between">
              <div>
                <div className={`text-2xl font-bold glyph-glow ${
                  mockSystemStatus.disk.usage < 50 ? "text-green-400" :
                  mockSystemStatus.disk.usage < 80 ? "text-yellow-400" : "text-red-400"
                }`}>
                  {mockSystemStatus.disk.usage}%
                </div>
                <div className="text-sm text-soft">–î–∏—Å–∫</div>
              </div>
              <div className={`text-2xl ${
                mockSystemStatus.disk.usage < 50 ? "text-green-400" :
                mockSystemStatus.disk.usage < 80 ? "text-yellow-400" : "text-red-400"
              }`}>
                üíΩ
              </div>
            </div>
          </div>
        </div>

        {/* –í–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
        <div className="bg-panel border border-line rounded-lg bevel">
          <div className="flex border-b border-line">
            <button
              onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏("general")}
              className={`px-6 py-3 font-medium transition-colors border-b-2 border-transparent
                         ${activeTab === "general" 
                           ? "text-neon border-neon bg-neon/10" 
                           : "text-soft hover:text-base hover:bg-subtle/50"
                         }`}
            >
              ‚öôÔ∏è –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
            <button
              onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏("database")}
              className={`px-6 py-3 font-medium transition-colors border-b-2 border-transparent
                         ${activeTab === "database" 
                           ? "text-cyan border-cyan bg-cyan/10" 
                           : "text-soft hover:text-base hover:bg-subtle/50"
                         }`}
            >
              üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
            </button>
            <button
              onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏("security")}
              className={`px-6 py-3 font-medium transition-colors border-b-2 border-transparent
                         ${activeTab === "security" 
                           ? "text-red-400 border-red-400 bg-red-400/10" 
                           : "text-soft hover:text-base hover:bg-subtle/50"
                         }`}
            >
              üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
            </button>
          </div>

          <div className="p-6">
            {activeTab === "general" && (
              <SystemSettings
                settings={mockSettings}
                onSave={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–ù–∞—Å—Ç—Ä–æ–µ–∫}
                onRestart={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏–°–∏—Å—Ç–µ–º—ã}
              />
            )}

            {activeTab === "database" && (
              <DatabaseStatus
                systemStatus={mockSystemStatus}
                onRestart={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏–°–∏—Å—Ç–µ–º—ã}
              />
            )}

            {activeTab === "security" && (
              <SecuritySettings
                settings={mockSettings}
                onSave={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–ù–∞—Å—Ç—Ä–æ–µ–∫}
              />
            )}
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="bg-subtle border border-line rounded-lg bevel p-4">
          <h3 className="text-lg font-bold text-base mb-4 flex items-center space-x-2">
            <span>üöÄ</span>
            <span>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</span>
          </h3>
          <div className="flex flex-wrap gap-3">
            <button
              onClick={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏–°–∏—Å—Ç–µ–º—ã}
              className="px-4 py-2 bg-yellow-400/20 border border-yellow-400 text-yellow-400
                       hover:bg-yellow-400/30 rounded font-medium transition-colors"
            >
              üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
            </button>
            <button
              onClick={() => console.log("–û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞...")}
              className="px-4 py-2 bg-cyan/20 border border-cyan text-cyan
                       hover:bg-cyan/30 rounded font-medium transition-colors"
            >
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à
            </button>
            <button
              onClick={() => console.log("–°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∫–∞–ø–∞...")}
              className="px-4 py-2 bg-green-400/20 border border-green-400 text-green-400
                       hover:bg-green-400/30 rounded font-medium transition-colors"
            >
              üíæ –°–æ–∑–¥–∞—Ç—å –±–µ–∫–∞–ø
            </button>
            <button
              onClick={() => console.log("–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤...")}
              className="px-4 py-2 bg-purple-400/20 border border-purple-400 text-purple-400
                       hover:bg-purple-400/30 rounded font-medium transition-colors"
            >
              üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
            </button>
          </div>
        </div>
      </div>
    </AdminLayout>
  );
}