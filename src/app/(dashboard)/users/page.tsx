"use client";

import React, { useState, useCallback } from "react";
import AdminLayout from "../../../components/AdminLayout";
import { api } from "../../../utils/api";
import { UsersTable, type UserTableData } from "../../../components/admin/users/UsersTable";
import { UserForm } from "../../../components/admin/users/UserForm";

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
 */
export default function UsersPage() {
  const [currentPage, setCurrentPage] = useState(1);
  const [searchQuery, setSearchQuery] = useState("");
  const [roleFilter, setRoleFilter] = useState<"USER" | "ADMIN" | undefined>();
  const [selectedUser, setSelectedUser] = useState<UserTableData | null>(null);

  const itemsPerPage = 20;
  const offset = (currentPage - 1) * itemsPerPage;

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
  const { 
    data: usersData, 
    isLoading, 
    refetch: –æ–±–Ω–æ–≤–∏—Ç—å–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π 
  } = api.admin.users.getAll.useQuery({
    search: searchQuery.trim() || undefined,
    role: roleFilter,
    limit: itemsPerPage,
    offset: offset,
  });

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const { data: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ } = api.admin.users.getStats.useQuery();

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º useCallback –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏)
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–æ–∏—Å–∫–∞ = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {
    const target = e.target as HTMLInputElement;
    setSearchQuery(target.value);
    setCurrentPage(1); // –°–±—Ä–æ—Å –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
  }, []);

  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–§–∏–ª—å—Ç—Ä–∞–†–æ–ª–∏ = useCallback((role: "USER" | "ADMIN" | "all") => {
    setRoleFilter(role === "all" ? undefined : role);
    setCurrentPage(1); // –°–±—Ä–æ—Å –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  }, []);

  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è = useCallback((user: UserTableData) => {
    setSelectedUser(user);
  }, []);

  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ó–∞–∫—Ä—ã—Ç–∏—è–§–æ—Ä–º—ã = useCallback(() => {
    setSelectedUser(null);
  }, []);

  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è = useCallback(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    –æ–±–Ω–æ–≤–∏—Ç—å–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π();
    setSelectedUser(null);
  }, [–æ–±–Ω–æ–≤–∏—Ç—å–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]);

  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–º–µ–Ω—ã–°—Ç—Ä–∞–Ω–∏—Ü—ã = useCallback((page: number) => {
    setCurrentPage(page);
  }, []);

  return (
    <AdminLayout>
      <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-neon glyph-glow">
            üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
          </h1>
          <p className="text-soft text-sm mt-1">
            –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
          </p>
        </div>
        
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        {—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ && (
          <div className="flex space-x-4 text-sm">
            <div className="text-center">
              <div className="text-neon font-mono text-lg glyph-glow">
                {—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.totalUsers}
              </div>
              <div className="text-soft">–í—Å–µ–≥–æ</div>
            </div>
            <div className="text-center">
              <div className="text-cyan font-mono text-lg">
                {—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.adminUsers}
              </div>
              <div className="text-soft">–ê–¥–º–∏–Ω—ã</div>
            </div>
            <div className="text-center">
              <div className="text-yellow-400 font-mono text-lg">
                {—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.blockedUsers}
              </div>
              <div className="text-soft">–ó–∞–±–ª–æ–∫–∏—Ä.</div>
            </div>
            <div className="text-center">
              <div className="text-green-400 font-mono text-lg">
                {—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.activeUsersLast30Days}
              </div>
              <div className="text-soft">–ê–∫—Ç–∏–≤–Ω—ã–µ</div>
            </div>
          </div>
        )}
      </div>

      {/* –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –ø–æ–∏—Å–∫–∞ */}
      <div className="bg-panel border border-line rounded-lg bevel p-4">
        <div className="flex flex-col md:flex-row gap-4">
          {/* –ü–æ–∏—Å–∫ */}
          <div className="flex-1">
            <label htmlFor="search" className="block text-sm font-medium text-soft mb-2">
              –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
            </label>
            <input
              id="search"
              type="text"
              value={searchQuery}
              onChange={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–æ–∏—Å–∫–∞}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ email..."
              className="w-full px-3 py-2 bg-subtle border border-line rounded-md
                       text-base placeholder-soft focus:border-neon focus:ring-1 focus:ring-neon
                       transition-colors"
            />
          </div>
          
          {/* –§–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª—è–º */}
          <div>
            <label className="block text-sm font-medium text-soft mb-2">
              –§–∏–ª—å—Ç—Ä –ø–æ —Ä–æ–ª–∏:
            </label>
            <div className="flex space-x-2">
              <button
                onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–§–∏–ª—å—Ç—Ä–∞–†–æ–ª–∏("all")}
                className={`px-3 py-2 rounded-md text-xs font-medium border transition-all
                  ${!roleFilter 
                    ? "bg-neon/20 border-neon text-neon shadow-neon" 
                    : "bg-panel border-line text-soft hover:border-neon"}`}
              >
                –í—Å–µ
              </button>
              <button
                onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–§–∏–ª—å—Ç—Ä–∞–†–æ–ª–∏("USER")}
                className={`px-3 py-2 rounded-md text-xs font-medium border transition-all
                  ${roleFilter === "USER" 
                    ? "bg-cyan/20 border-cyan text-cyan shadow-neon" 
                    : "bg-panel border-line text-soft hover:border-cyan"}`}
              >
                –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
              </button>
              <button
                onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–§–∏–ª—å—Ç—Ä–∞–†–æ–ª–∏("ADMIN")}
                className={`px-3 py-2 rounded-md text-xs font-medium border transition-all
                  ${roleFilter === "ADMIN" 
                    ? "bg-neon/20 border-neon text-neon shadow-neon glyph-glow" 
                    : "bg-panel border-line text-soft hover:border-neon"}`}
              >
                –ê–¥–º–∏–Ω—ã
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <UsersTable
        users={(usersData?.users || []).map(user => ({
          ...user,
          name: user.name || "–ë–µ–∑ –∏–º–µ–Ω–∏",
          email: user.email || "",
          _count: {
            projects: user._count.Project,
            generalMessages: user._count.ChatMessage,
            aiMessages: user._count.AiChatMessage,
          },
        }))}
        loading={isLoading}
        onUserClick={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è}
        pagination={usersData ? {
          currentPage: currentPage,
          totalPages: Math.ceil(usersData.totalCount / itemsPerPage),
          onPageChange: –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–º–µ–Ω—ã–°—Ç—Ä–∞–Ω–∏—Ü—ã,
        } : undefined}
      />

      {/* –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {selectedUser && (
        <UserForm
          user={selectedUser}
          onClose={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ó–∞–∫—Ä—ã—Ç–∏—è–§–æ—Ä–º—ã}
          onSave={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è}
        />
      )}
      </div>
    </AdminLayout>
  );
}