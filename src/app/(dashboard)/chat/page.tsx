'use client';

import React, { useState, useCallback } from 'react';
import { api } from '../../../utils/api';
import { ChatMessages } from '../../../components/admin/chat/ChatMessages';
import { ChatStats } from '../../../components/admin/chat/ChatStats';
import { NeonIcon } from '../../../components/ui/NeonIcon';
import {
	FaComments,
	FaChartLine,
	FaUsers,
	FaShieldAlt,
	FaRobot,
} from 'react-icons/fa';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
export interface ChatMessageData {
	id: string;
	content: string;
	userId: string;
	userName: string;
	userAvatar?: string;
	type: 'general' | 'ai';
	createdAt: Date;
	updatedAt: Date;
	isBlocked?: boolean;
}

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
export interface ChatStatsData {
	totalMessages: number;
	messagesLast24h: number;
	messagesLast7d: number;
	activeUsers: number;
	mostActiveUsers: Array<{
		userId: string;
		userName: string;
		messageCount: number;
	}>;
	dailyActivity: Array<{
		date: string;
		generalMessages: number;
		aiMessages: number;
	}>;
	moderationActions: number;
}

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —á–∞—Ç–æ–≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
 * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –æ–±—â–∏–º –∏ –ò–ò —á–∞—Ç–æ–º, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –º–æ–¥–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
 */
export default function ChatPage() {
	// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ —á–∞—Ç–∞
	const [activeTab, setActiveTab] = useState<'general' | 'ai' | 'stats'>(
		'general',
	);
	const [selectedMessage, setSelectedMessage] =
		useState<ChatMessageData | null>(null);

	// –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
	const { data: chatStats, isLoading: loadingStats } =
		api.chat.getStats.useQuery();
	const { data: generalMessages, isLoading: loadingGeneral } =
		api.chat.getMessages.useQuery({
			limit: 50,
			type: 'general',
		});
	const { data: aiMessages, isLoading: loadingAi } =
		api.chat.getMessages.useQuery({
			limit: 50,
			type: 'ai',
		});

	// –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
	const mockStats: ChatStatsData =
		chatStats ?
			{
				totalMessages: chatStats.totalMessages,
				messagesLast24h: chatStats.messagesLast24h,
				messagesLast7d: chatStats.messagesLast7d,
				activeUsers: chatStats.activeUsers,
				mostActiveUsers: chatStats.mostActiveUsers || [],
				dailyActivity: (chatStats.dailyActivity || []).map(
					(day: any) => ({
						date:
							day.date || new Date().toISOString().split('T')[0],
						generalMessages: day.generalMessages || 0,
						aiMessages: day.aiMessages || 0,
					}),
				),
				moderationActions: chatStats.moderationActions || 0,
			}
		:	{
				totalMessages: 0,
				messagesLast24h: 0,
				messagesLast7d: 0,
				activeUsers: 0,
				mostActiveUsers: [],
				dailyActivity: [],
				moderationActions: 0,
			};

	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î –∫ —Ñ–æ—Ä–º–∞—Ç—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
	const mockGeneralMessages: ChatMessageData[] = (
		generalMessages?.messages || []
	).map((msg: any) => ({
		id: msg.id,
		content: msg.content,
		userId: msg.userId,
		userName: msg.userName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
		userAvatar:
			msg.userAvatar || `https://i.pravatar.cc/40?u=${msg.userId}`,
		type: 'general' as const,
		createdAt: msg.createdAt,
		updatedAt: msg.updatedAt,
		isBlocked: msg.isBlocked || false,
	}));

	const mockAiMessages: ChatMessageData[] = (aiMessages?.messages || []).map(
		(msg: any) => ({
			id: msg.id,
			content: msg.content,
			userId: msg.userId,
			userName: msg.userName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
			userAvatar:
				msg.userAvatar || `https://i.pravatar.cc/40?u=${msg.userId}`,
			type: 'ai' as const,
			createdAt: msg.createdAt,
			updatedAt: msg.updatedAt,
			isBlocked: msg.isBlocked || false,
		}),
	);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏ = useCallback(
		(tab: 'general' | 'ai' | 'stats') => {
			setActiveTab(tab);
			setSelectedMessage(null);
		},
		[],
	);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–°–æ–æ–±—â–µ–Ω–∏—è = useCallback(
		(message: ChatMessageData) => {
			setSelectedMessage(message);
		},
		[],
	);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–£–¥–∞–ª–µ–Ω–∏—è–°–æ–æ–±—â–µ–Ω–∏—è = useCallback((messageId: string) => {
		// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ tRPC –º—É—Ç–∞—Ü–∏–∏
		console.log('–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', messageId);
		setSelectedMessage(null);
	}, []);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è = useCallback((userId: string) => {
		// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ tRPC –º—É—Ç–∞—Ü–∏–∏
		console.log('–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
	}, []);

	return (
		<div className='space-y-6'>
			{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
			<div className='flex items-center justify-between'>
				<div>
					<h1 className='text-2xl font-bold text-neon glyph-glow flex items-center gap-2'>
						<NeonIcon
							Icon={FaComments}
							size={24}
							variant='intense'
						/>
						–ú–æ–¥–µ—Ä–∞—Ü–∏—è —á–∞—Ç–æ–≤
					</h1>
					<p className='text-soft text-sm mt-1'>
						–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ–±—â–µ–≥–æ –∏ –ò–ò —á–∞—Ç–∞
					</p>
				</div>
			</div>

			{/* –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
			<div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4'>
				<div className='bg-panel border border-line rounded-lg bevel p-4'>
					<div className='flex items-center justify-between'>
						<div>
							<div className='text-2xl font-bold text-neon glyph-glow'>
								{loadingStats ? '...' : mockStats.totalMessages}
							</div>
							<div className='text-sm text-soft'>
								–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π
							</div>
						</div>
						<NeonIcon
							Icon={FaComments}
							size={32}
							variant='intense'
							className='stats-icon'
						/>
					</div>
				</div>

				<div className='bg-panel border border-line rounded-lg bevel p-4'>
					<div className='flex items-center justify-between'>
						<div>
							<div className='text-2xl font-bold text-cyan glyph-glow'>
								{loadingStats ?
									'...'
								:	mockStats.messagesLast24h}
							</div>
							<div className='text-sm text-soft'>
								–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24—á
							</div>
						</div>
						<NeonIcon
							Icon={FaChartLine}
							size={32}
							variant='cyan'
							className='stats-icon'
						/>
					</div>
				</div>

				<div className='bg-panel border border-line rounded-lg bevel p-4'>
					<div className='flex items-center justify-between'>
						<div>
							<div className='text-2xl font-bold text-purple-400 glyph-glow'>
								{loadingStats ? '...' : mockStats.activeUsers}
							</div>
							<div className='text-sm text-soft'>
								–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
							</div>
						</div>
						<NeonIcon
							Icon={FaUsers}
							size={32}
							variant='purple'
							className='stats-icon'
						/>
					</div>
				</div>

				<div className='bg-panel border border-line rounded-lg bevel p-4'>
					<div className='flex items-center justify-between'>
						<div>
							<div className='text-2xl font-bold text-orange-400 glyph-glow'>
								{loadingStats ?
									'...'
								:	mockStats.moderationActions}
							</div>
							<div className='text-sm text-soft'>
								–ú–æ–¥–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
							</div>
						</div>
						<NeonIcon
							Icon={FaShieldAlt}
							size={32}
							variant='orange'
							className='stats-icon'
						/>
					</div>
				</div>
			</div>

			{/* –í–∫–ª–∞–¥–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è */}
			<div className='bg-panel border border-line rounded-lg bevel'>
				<div className='flex border-b border-line'>
					<button
						onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏('general')}
						className={`px-6 py-3 font-medium transition-colors border-b-2 border-transparent
                         ${
								activeTab === 'general' ?
									'text-neon border-neon bg-neon/10'
								:	'text-soft hover:text-base hover:bg-subtle/50'
							}`}
					>
						<NeonIcon
							Icon={FaComments}
							size={16}
							variant='default'
						/>
						–û–±—â–∏–π —á–∞—Ç ({mockGeneralMessages.length})
					</button>
					<button
						onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏('ai')}
						className={`px-6 py-3 font-medium transition-colors border-b-2 border-transparent
                         ${
								activeTab === 'ai' ?
									'text-cyan border-cyan bg-cyan/10'
								:	'text-soft hover:text-base hover:bg-subtle/50'
							}`}
					>
						<NeonIcon
							Icon={FaRobot}
							size={16}
							variant='cyan'
						/>
						–ò–ò —á–∞—Ç ({mockAiMessages.length})
					</button>
					<button
						onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è–í–∫–ª–∞–¥–∫–∏('stats')}
						className={`px-6 py-3 font-medium transition-colors border-b-2 border-transparent
                         ${
								activeTab === 'stats' ?
									'text-yellow-400 border-yellow-400 bg-yellow-400/10'
								:	'text-soft hover:text-base hover:bg-subtle/50'
							}`}
					>
						üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
					</button>
				</div>

				<div className='p-6'>
					{activeTab === 'general' && (
						<ChatMessages
							messages={mockGeneralMessages}
							type='general'
							loading={loadingGeneral}
							onMessageSelect={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–°–æ–æ–±—â–µ–Ω–∏—è}
							onDeleteMessage={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–£–¥–∞–ª–µ–Ω–∏—è–°–æ–æ–±—â–µ–Ω–∏—è}
							onBanUser={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è}
						/>
					)}

					{activeTab === 'ai' && (
						<ChatMessages
							messages={mockAiMessages}
							type='ai'
							loading={loadingAi}
							onMessageSelect={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–°–æ–æ–±—â–µ–Ω–∏—è}
							onDeleteMessage={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–£–¥–∞–ª–µ–Ω–∏—è–°–æ–æ–±—â–µ–Ω–∏—è}
							onBanUser={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è}
						/>
					)}

					{activeTab === 'stats' && (
						<ChatStats
							stats={mockStats}
							loading={loadingStats}
						/>
					)}
				</div>
			</div>
		</div>
	);
}
