"use client";

import React from "react";
import { SkillCard } from "./SkillCard";
import type { SkillData } from "../../../app/(dashboard)/skills/page";

interface SkillsGridProps {
  skills: SkillData[];
  loading: boolean;
  onSkillClick: (skill: SkillData) => void;
  onCreateSkill: () => void;
}

/**
 * –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è CSS Grid —Å–µ—Ç–∫–∞ –Ω–∞–≤—ã–∫–æ–≤ —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
 * –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç CSS Grid –Ω–∞–¥ Flexbox —Å–æ–≥–ª–∞—Å–Ω–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
 */
export function SkillsGrid({ 
  skills, 
  loading, 
  onSkillClick,
  onCreateSkill 
}: SkillsGridProps) {

  // Loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Å–∫–µ–ª–µ—Ç–æ–Ω–∞–º–∏
  if (loading) {
    return (
      <div className="bg-panel border border-line rounded-lg bevel p-6">
        <div className="space-y-6">
          {Array.from({ length: 3 }).map((_, categoryIndex) => (
            <div key={categoryIndex} className="space-y-4">
              <div className="h-6 bg-subtle rounded w-32 animate-pulse" />
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                {Array.from({ length: 4 }).map((_, index) => (
                  <div key={index} className="animate-pulse">
                    <div className="h-24 bg-subtle rounded-lg mb-2" />
                    <div className="h-4 bg-subtle rounded mb-1" />
                    <div className="h-3 bg-subtle rounded w-2/3" />
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  }

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –Ω–∞–≤—ã–∫–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  const –Ω–∞–≤—ã–∫–∏–ü–æ–ö–∞—Ç–µ–≥–æ—Ä–∏—è–º = skills.reduce((–≥—Ä—É–ø–ø—ã, –Ω–∞–≤—ã–∫) => {
    if (!–≥—Ä—É–ø–ø—ã[–Ω–∞–≤—ã–∫.category]) {
      –≥—Ä—É–ø–ø—ã[–Ω–∞–≤—ã–∫.category] = [];
    }
    –≥—Ä—É–ø–ø—ã[–Ω–∞–≤—ã–∫.category]?.push(–Ω–∞–≤—ã–∫);
    return –≥—Ä—É–ø–ø—ã;
  }, {} as Record<string, SkillData[]>);

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞–≤—ã–∫–æ–≤ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —É—Ä–æ–≤–Ω—é (—É–±—ã–≤–∞–Ω–∏–µ)
  Object.keys(–Ω–∞–≤—ã–∫–∏–ü–æ–ö–∞—Ç–µ–≥–æ—Ä–∏—è–º).forEach(category => {
    –Ω–∞–≤—ã–∫–∏–ü–æ–ö–∞—Ç–µ–≥–æ—Ä–∏—è–º[category]?.sort((a, b) => b.level - a.level);
  });

  // –ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const –ø–æ—Ä—è–¥–æ–∫–ö–∞—Ç–µ–≥–æ—Ä–∏–π = ["Frontend", "Backend", "DevOps", "Tools", "Other"];
  const –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ = –ø–æ—Ä—è–¥–æ–∫–ö–∞—Ç–µ–≥–æ—Ä–∏–π.filter(cat => 
    –Ω–∞–≤—ã–∫–∏–ü–æ–ö–∞—Ç–µ–≥–æ—Ä–∏—è–º[cat] && –Ω–∞–≤—ã–∫–∏–ü–æ–ö–∞—Ç–µ–≥–æ—Ä–∏—è–º[cat].length > 0
  );

  // –ò–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const –∏–∫–æ–Ω–∫–∏–ö–∞—Ç–µ–≥–æ—Ä–∏–π = {
    Frontend: "üé®",
    Backend: "‚öôÔ∏è", 
    DevOps: "üöÄ",
    Tools: "üõ†Ô∏è",
    Other: "üí°"
  };

  // –¶–≤–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const —Ü–≤–µ—Ç–∞–ö–∞—Ç–µ–≥–æ—Ä–∏–π = {
    Frontend: "neon",
    Backend: "cyan",
    DevOps: "purple-400",
    Tools: "yellow-400",
    Other: "orange-400"
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  if (skills.length === 0) {
    return (
      <div className="bg-panel border border-line rounded-lg bevel p-12 text-center">
        <div className="text-6xl mb-4">‚ö°</div>
        <h3 className="text-xl font-bold text-base mb-2">
          –ù–∞–≤—ã–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        </h3>
        <p className="text-soft mb-6">
          –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –Ω–∞–≤—ã–∫ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
        </p>
        <button
          onClick={onCreateSkill}
          className="px-6 py-3 bg-neon/20 border border-neon text-neon
                   hover:bg-neon/30 hover:shadow-neon rounded-md font-medium
                   bevel transition-all duration-300"
        >
          ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤—ã–∫
        </button>
      </div>
    );
  }

  return (
    <div className="bg-panel border border-line rounded-lg bevel p-6">
      <div className="space-y-8">
        {–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.map((category) => {
          const –Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ = –Ω–∞–≤—ã–∫–∏–ü–æ–ö–∞—Ç–µ–≥–æ—Ä–∏—è–º[category];
          const —Ü–≤–µ—Ç–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ = —Ü–≤–µ—Ç–∞–ö–∞—Ç–µ–≥–æ—Ä–∏–π[category as keyof typeof —Ü–≤–µ—Ç–∞–ö–∞—Ç–µ–≥–æ—Ä–∏–π];
          const –∏–∫–æ–Ω–∫–∞ = –∏–∫–æ–Ω–∫–∏–ö–∞—Ç–µ–≥–æ—Ä–∏–π[category as keyof typeof –∏–∫–æ–Ω–∫–∏–ö–∞—Ç–µ–≥–æ—Ä–∏–π];
          
          if (!–Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ || –Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.length === 0) return null;
          
          return (
            <div key={category} className="space-y-4">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className="text-2xl">{–∏–∫–æ–Ω–∫–∞}</div>
                  <h3 className={`text-lg font-bold text-${—Ü–≤–µ—Ç–ö–∞—Ç–µ–≥–æ—Ä–∏–∏} glyph-glow`}>
                    {category}
                  </h3>
                  <div className="text-sm text-soft">
                    ({–Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.length} –Ω–∞–≤—ã–∫{–Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.length === 1 ? '' : –Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.length < 5 ? '–∞' : '–æ–≤'})
                  </div>
                </div>
                
                {/* –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                <div className="flex items-center space-x-2">
                  <span className="text-xs text-soft">–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å:</span>
                  <span className={`text-sm font-bold text-${—Ü–≤–µ—Ç–ö–∞—Ç–µ–≥–æ—Ä–∏–∏}`}>
                    {Math.round(–Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.reduce((sum, s) => sum + s.level, 0) / –Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.length)}%
                  </span>
                </div>
              </div>

              {/* CSS Grid —Å–µ—Ç–∫–∞ –Ω–∞–≤—ã–∫–æ–≤ */}
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                {–Ω–∞–≤—ã–∫–∏–í–ö–∞—Ç–µ–≥–æ—Ä–∏–∏.map((skill) => (
                  <SkillCard
                    key={skill.id}
                    skill={skill}
                    onClick={onSkillClick}
                    categoryColor={—Ü–≤–µ—Ç–ö–∞—Ç–µ–≥–æ—Ä–∏–∏}
                  />
                ))}
              </div>
            </div>
          );
        })}

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –Ω–∞–≤—ã–∫–∞ */}
        <div className="border-t border-line pt-6">
          <div
            onClick={onCreateSkill}
            className="h-24 bg-subtle/50 border-2 border-dashed border-line
                     hover:border-neon hover:bg-neon/5 rounded-lg
                     flex flex-col items-center justify-center
                     cursor-pointer transition-all duration-300 group"
          >
            <div className="text-2xl mb-2 text-soft group-hover:text-neon transition-colors">
              ‚ûï
            </div>
            <div className="text-sm text-soft group-hover:text-neon transition-colors">
              –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤—ã–∫
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}