import React, { useState, useCallback, useRef } from 'react';
import Image from 'next/image';

interface ImageUploadProps {
	currentImageUrl?: string | null;
	onImageUpload: (imageUrl: string) => void;
	maxSizeInMB?: number;
	acceptedFormats?: string[];
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å drag & drop
 * –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–µ–≤—å—é, –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–æ–≤
 */
export function ImageUpload({
	currentImageUrl,
	onImageUpload,
	maxSizeInMB = 5,
	acceptedFormats = ['image/jpeg', 'image/png', 'image/webp'],
}: ImageUploadProps) {
	const [isDragging, setIsDragging] = useState(false);
	const [isUploading, setIsUploading] = useState(false);
	const [uploadProgress, setUploadProgress] = useState(0);
	const [error, setError] = useState<string | null>(null);

	const fileInputRef = useRef<HTMLInputElement>(null);

	// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
	const –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å–§–∞–π–ª = useCallback(
		(file: File): string | null => {
			// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
			if (!acceptedFormats.includes(file.type)) {
				return `–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: ${acceptedFormats
					.map((f) => f.split('/')[1])
					.join(', ')
					.toUpperCase()}`;
			}

			// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
			const sizeInMB = file.size / (1024 * 1024);
			if (sizeInMB > maxSizeInMB) {
				return `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${maxSizeInMB}MB`;
			}

			return null;
		},
		[acceptedFormats, maxSizeInMB],
	);

	// –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤)
	const –∑–∞–≥—Ä—É–∑–∏—Ç—å–§–∞–π–ª = useCallback(async (file: File): Promise<string> => {
		return new Promise((resolve, reject) => {
			// –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
			let progress = 0;
			const interval = setInterval(() => {
				progress += 10;
				setUploadProgress(progress);

				if (progress >= 100) {
					clearInterval(interval);
					// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â—ë–Ω URL —Å —Å–µ—Ä–≤–µ—Ä–∞
					const mockUrl = URL.createObjectURL(file);
					resolve(mockUrl);
				}
			}, 100);
		});
	}, []);

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
	const –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å–§–∞–π–ª—ã = useCallback(
		async (files: FileList | null) => {
			if (!files || files.length === 0) return;

			const file = files[0];
			if (!file) return;
			const validationError = –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å–§–∞–π–ª(file);

			if (validationError) {
				setError(validationError);
				return;
			}

			setError(null);
			setIsUploading(true);
			setUploadProgress(0);

			try {
				const imageUrl = await –∑–∞–≥—Ä—É–∑–∏—Ç—å–§–∞–π–ª(file);
				onImageUpload(imageUrl);
			} catch (error) {
				console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
				setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞');
			} finally {
				setIsUploading(false);
				setUploadProgress(0);
			}
		},
		[–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å–§–∞–π–ª, –∑–∞–≥—Ä—É–∑–∏—Ç—å–§–∞–π–ª, onImageUpload],
	);

	// Drag & Drop –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫DragOver = useCallback((e: React.DragEvent) => {
		e.preventDefault();
		setIsDragging(true);
	}, []);

	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫DragLeave = useCallback((e: React.DragEvent) => {
		e.preventDefault();
		setIsDragging(false);
	}, []);

	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫Drop = useCallback(
		(e: React.DragEvent) => {
			e.preventDefault();
			setIsDragging(false);
			–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å–§–∞–π–ª—ã(e.dataTransfer.files);
		},
		[–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å–§–∞–π–ª—ã],
	);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–§–∞–π–ª–∞ = useCallback(
		(e: React.ChangeEvent<HTMLInputElement>) => {
			–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å–§–∞–π–ª—ã(e.target.files);
		},
		[–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å–§–∞–π–ª—ã],
	);

	// –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
	const –æ—Ç–∫—Ä—ã—Ç—å–í—ã–±–æ—Ä–§–∞–π–ª–∞ = useCallback(() => {
		fileInputRef.current?.click();
	}, []);

	// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
	const —É–¥–∞–ª–∏—Ç—å–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ = useCallback(() => {
		onImageUpload('');
		if (fileInputRef.current) {
			fileInputRef.current.value = '';
		}
	}, [onImageUpload]);

	return (
		<div className='space-y-4'>
			{/* –û–±–ª–∞—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ */}
			<div
				onDragOver={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫DragOver}
				onDragLeave={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫DragLeave}
				onDrop={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫Drop}
				onClick={–æ—Ç–∫—Ä—ã—Ç—å–í—ã–±–æ—Ä–§–∞–π–ª–∞}
				className={`
          relative border-2 border-dashed rounded-lg p-6 text-center cursor-pointer
          transition-all duration-300
          ${
				isDragging ?
					'border-neon bg-neon/5 scale-105'
				:	'border-line hover:border-neon hover:bg-neon/5'
			}
          ${isUploading ? 'pointer-events-none' : ''}
        `}
			>
				<input
					ref={fileInputRef}
					type='file'
					accept={acceptedFormats.join(',')}
					onChange={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–§–∞–π–ª–∞}
					className='hidden'
				/>

				{isUploading ?
					// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
					<div className='space-y-3'>
						<div className='text-neon text-2xl'>‚è≥</div>
						<div className='text-sm text-neon'>
							–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...
						</div>
						<div className='w-full bg-subtle rounded-full h-2'>
							<div
								className='bg-neon h-2 rounded-full transition-all duration-300'
								style={{ width: `${uploadProgress}%` }}
							/>
						</div>
						<div className='text-xs text-soft'>
							{uploadProgress}%
						</div>
					</div>
				: currentImageUrl ?
					// –ü—Ä–µ–≤—å—é —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
					<div className='space-y-3'>
						<div className='relative w-32 h-32 mx-auto rounded-lg overflow-hidden'>
							<Image
								src={currentImageUrl}
								alt='–ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
								fill
								className='object-cover'
							/>
						</div>
						<div className='flex justify-center space-x-2'>
							<button
								type='button'
								onClick={(e) => {
									e.stopPropagation();
									–æ—Ç–∫—Ä—ã—Ç—å–í—ã–±–æ—Ä–§–∞–π–ª–∞();
								}}
								className='px-3 py-1 bg-cyan/20 border border-cyan text-cyan rounded text-sm
                         hover:bg-cyan/30 transition-colors'
							>
								üîÑ –ó–∞–º–µ–Ω–∏—Ç—å
							</button>
							<button
								type='button'
								onClick={(e) => {
									e.stopPropagation();
									—É–¥–∞–ª–∏—Ç—å–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ();
								}}
								className='px-3 py-1 bg-red-500/20 border border-red-500 text-red-400 rounded text-sm
                         hover:bg-red-500/30 transition-colors'
							>
								üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
							</button>
						</div>
					</div>
					// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—É—Å—Ç–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
				:	<div className='space-y-3'>
						<div className='text-4xl text-soft'>
							{isDragging ? 'üì§' : 'üñºÔ∏è'}
						</div>
						<div className='space-y-1'>
							<div className='text-base font-medium'>
								{isDragging ?
									'–û—Ç–ø—É—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏'
								:	'–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'}
							</div>
							<div className='text-sm text-soft'>
								–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
							</div>
						</div>
					</div>
				}
			</div>

			{/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö */}
			<div className='text-xs text-soft text-center space-y-1'>
				<div>
					–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:{' '}
					{acceptedFormats
						.map((f) => f.split('/')[1])
						.join(', ')
						.toUpperCase()}
				</div>
				<div>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {maxSizeInMB}MB</div>
			</div>

			{/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ */}
			{error && (
				<div className='bg-red-500/10 border border-red-500 text-red-400 p-3 rounded-lg text-sm'>
					‚ö†Ô∏è {error}
				</div>
			)}
		</div>
	);
}
