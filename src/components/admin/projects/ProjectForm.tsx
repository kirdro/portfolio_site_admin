import React, { useState, useCallback } from "react";
import { z } from "zod";
import type { ProjectData } from "../../../app/(dashboard)/projects/page";
import { FileUploadDeferred } from "../../ui/FileUploadDeferred";
import { api } from "../../../utils/api";
import { Modal, ModalHeader, ModalBody, ModalFooter } from "../../ui/Modal";
import { useToasts } from "../../ui/Toast";

interface ProjectFormProps {
  project?: ProjectData | null;
  isCreating: boolean;
  isOpen: boolean;
  onClose: () => void;
  onSave: () => void;
}

// Zod —Å—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
const projectSchema = z.object({
  title: z.string().min(1, "–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ").max(100, "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ"),
  description: z.string().min(10, "–û–ø–∏—Å–∞–Ω–∏–µ –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤").max(500, "–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ"),
  imageUrl: z.string().url("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è").or(z.literal("")).optional().nullable(),
  demoUrl: z.string().url("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –¥–µ–º–æ").or(z.literal("")).optional().nullable(),
  githubUrl: z.string().url("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è").or(z.literal("")).optional().nullable(),
  featured: z.boolean(),
  tags: z.array(z.string()).min(1, "–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–µ–≥"),
});

/**
 * –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
 * –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–≥–∞–º–∏
 */
export function ProjectForm({ project, isCreating, isOpen, onClose, onSave }: ProjectFormProps) {
  
  const { success, error: showError } = useToasts();
  
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º tRPC –º—É—Ç–∞—Ü–∏–∏
  const uploadFileMutation = api.files.upload.useMutation();
  
  const createMutation = api.admin.projects.create.useMutation({
    onSuccess: () => {
      success("–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω", "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ");
      onSave();
    },
    onError: (error) => {
      console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:", error);
      showError("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è", error.message);
    }
  });

  const updateMutation = api.admin.projects.update.useMutation({
    onSuccess: () => {
      success("–ü—Ä–æ–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω", "–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã");
      onSave();
    },
    onError: (error) => {
      console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:", error);
      showError("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", error.message);
    }
  });
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [formData, setFormData] = useState({
    title: project?.title || "",
    description: project?.description || "",
    imageUrl: project?.imageUrl || "",
    demoUrl: project?.demoUrl || "",
    githubUrl: project?.githubUrl || "",
    featured: project?.featured || false,
    tags: project?.tags || []
  });

  const [errors, setErrors] = useState<Record<string, string>>({});
  const [currentTag, setCurrentTag] = useState("");
  const [selectedImageFile, setSelectedImageFile] = useState<File | null>(null);
  const [previewImageUrl, setPreviewImageUrl] = useState<string | null>(null);

  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
  const availableTags = [
    // Frontend —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    "React", "Next.js", "Vue.js", "Angular", "Svelte", "Remix", "Astro", "Gatsby", "Nuxt.js",
    // –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
    "TypeScript", "JavaScript", "Python", "Java", "Go", "Rust", "C++", "C#", "PHP", "Ruby", "Swift", "Kotlin",
    // Backend —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏
    "Node.js", "Express", "Fastify", "NestJS", "Strapi", "Django", "FastAPI", "Spring Boot", "Laravel",
    // –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è
    "TailwindCSS", "CSS", "SASS", "SCSS", "Styled Components", "Emotion", "Material-UI", "Ant Design", "Bootstrap",
    // –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    "PostgreSQL", "MySQL", "MongoDB", "Redis", "SQLite", "Cassandra", "DynamoDB", "Supabase", "PlanetScale",
    // ORM –∏ ODM
    "Prisma", "TypeORM", "Sequelize", "Mongoose", "Drizzle", "MikroORM",
    // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–±–æ—Ä–∫–∏
    "Webpack", "Vite", "Parcel", "Rollup", "esbuild", "Turbopack", "Bun",
    // –û–±–ª–∞—á–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    "AWS", "Google Cloud", "Azure", "Vercel", "Netlify", "Railway", "Render", "Fly.io", "Heroku",
    // DevOps –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è
    "Docker", "Kubernetes", "CI/CD", "GitHub Actions", "GitLab CI", "Jenkins", "Terraform", "Ansible",
    // API —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
    "REST API", "GraphQL", "tRPC", "gRPC", "WebSocket", "Socket.io", "WebRTC",
    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    "Jest", "Vitest", "Cypress", "Playwright", "Testing Library", "Mocha", "Chai",
    // –î—Ä—É–≥–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
    "AI", "Machine Learning", "Blockchain", "Web3", "Solidity", "IPFS", "Three.js", "WebGL",
    // –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
    "React Native", "Flutter", "Ionic", "Expo",
    // –°–±–æ—Ä—â–∏–∫–∏ –∏ –ø–∞–∫–µ—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã
    "npm", "yarn", "pnpm",
    // –í–µ—Ä—Å–∏–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å
    "Git", "GitHub", "GitLab", "Bitbucket",
    // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    "Sentry", "DataDog", "New Relic", "Grafana", "Prometheus"
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
  const [isFileUploading, setIsFileUploading] = useState(false);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleFieldChange = useCallback((field: string, value: any) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    if (errors[field]) {
      setErrors(prev => {
        const newErrors = { ...prev };
        delete newErrors[field];
        return newErrors;
      });
    }
  }, [errors]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–≥–∞
  const handleAddTag = useCallback(() => {
    const trimmedTag = currentTag.trim();
    if (trimmedTag && !formData.tags.includes(trimmedTag)) {
      setFormData(prev => ({
        ...prev,
        tags: [...prev.tags, trimmedTag]
      }));
      setCurrentTag("");
    }
  }, [currentTag, formData.tags]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–≥–∞
  const handleRemoveTag = useCallback((tagToRemove: string) => {
    setFormData(prev => ({
      ...prev,
      tags: prev.tags.filter(tag => tag !== tagToRemove)
    }));
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageSelect = useCallback((file: File | null, previewUrl: string | null) => {
    setSelectedImageFile(file);
    setPreviewImageUrl(previewUrl);
  }, []);


  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  const validateForm = () => {
    try {
      projectSchema.parse(formData);
      setErrors({});
      return true;
    } catch (error) {
      if (error instanceof z.ZodError) {
        const newErrors: Record<string, string> = {};
        error.issues.forEach((issue) => {
          if (issue.path[0]) {
            newErrors[issue.path[0] as string] = issue.message;
          }
        });
        setErrors(newErrors);
      }
      return false;
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = useCallback(async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }
    
    try {
      let imageUrl = formData.imageUrl;
      
      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞ –≤ S3
      if (selectedImageFile) {
        setIsFileUploading(true);
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ S3...');
        const reader = new FileReader();
        const base64Promise = new Promise<string>((resolve) => {
          reader.onload = () => {
            const base64 = (reader.result as string).split(',')[1]!;
            resolve(base64);
          };
        });
        reader.readAsDataURL(selectedImageFile);
        
        const base64 = await base64Promise;
        const uploadResult = await uploadFileMutation.mutateAsync({
          file: base64,
          fileName: selectedImageFile.name,
          mimeType: selectedImageFile.type,
          category: 'project',
          maxSize: 5 * 1024 * 1024, // 5MB –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
        });
        
        imageUrl = uploadResult.url;
        setIsFileUploading(false);
        console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', imageUrl);
      }

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const dataToSubmit = {
        title: formData.title,
        description: formData.description,
        imageUrl: imageUrl || null,
        demoUrl: formData.demoUrl || null,
        githubUrl: formData.githubUrl || null,
        featured: formData.featured,
        tags: formData.tags
      };

      if (isCreating) {
        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        await createMutation.mutateAsync(dataToSubmit);
      } else if (project) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        await updateMutation.mutateAsync({
          id: project.id,
          ...dataToSubmit
        });
      }
    } catch (error) {
      // –û—à–∏–±–∫–∏ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ onError –º—É—Ç–∞—Ü–∏–π
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", error);
      setIsFileUploading(false);
    }
  }, [formData, isCreating, project, createMutation, updateMutation, validateForm, selectedImageFile, uploadFileMutation]);

  return (
    <Modal
      isOpen={isOpen}
      onClose={onClose}
      title={isCreating ? "‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç" : "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"}
      size="lg"
    >
      <form onSubmit={handleSubmit} className="space-y-6">
            {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
            <div>
              <label className="block text-sm font-medium text-base mb-2">
                –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ *
              </label>
              <input
                type="text"
                value={formData.title}
                onChange={(e) => handleFieldChange("title", e.target.value)}
                className={`w-full px-3 py-2 bg-subtle border rounded-md text-base
                           focus:border-neon focus:ring-1 focus:ring-neon transition-colors
                           ${errors.title ? "border-red-500" : "border-line"}`}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
                maxLength={100}
              />
              {errors.title && (
                <p className="text-red-400 text-sm mt-1">{errors.title}</p>
              )}
            </div>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
            <div>
              <label className="block text-sm font-medium text-base mb-2">
                –û–ø–∏—Å–∞–Ω–∏–µ *
              </label>
              <textarea
                value={formData.description}
                onChange={(e) => handleFieldChange("description", e.target.value)}
                rows={4}
                className={`w-full px-3 py-2 bg-subtle border rounded-md text-base resize-none
                           focus:border-neon focus:ring-1 focus:ring-neon transition-colors
                           ${errors.description ? "border-red-500" : "border-line"}`}
                placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
                maxLength={500}
              />
              <div className="flex justify-between mt-1">
                {errors.description ? (
                  <p className="text-red-400 text-sm">{errors.description}</p>
                ) : (
                  <div />
                )}
                <span className="text-xs text-soft">
                  {formData.description.length}/500
                </span>
              </div>
            </div>

            {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
            <div>
              <label className="block text-sm font-medium text-base mb-2">
                –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
              </label>
              <FileUploadDeferred
                currentFileUrl={formData.imageUrl}
                onFileSelected={handleImageSelect}
                category="project"
                acceptedTypes="image/*"
                maxSize={5 * 1024 * 1024}
                preview={true}
              />
              {errors.imageUrl && (
                <p className="text-red-400 text-sm mt-1">{errors.imageUrl}</p>
              )}
            </div>

            {/* URL —Å—Å—ã–ª–∫–∏ */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-base mb-2">
                  –°—Å—ã–ª–∫–∞ –Ω–∞ –¥–µ–º–æ
                </label>
                <input
                  type="url"
                  value={formData.demoUrl}
                  onChange={(e) => handleFieldChange("demoUrl", e.target.value)}
                  className={`w-full px-3 py-2 bg-subtle border rounded-md text-base
                             focus:border-neon focus:ring-1 focus:ring-neon transition-colors
                             ${errors.demoUrl ? "border-red-500" : "border-line"}`}
                  placeholder="https://example.com"
                />
                {errors.demoUrl && (
                  <p className="text-red-400 text-sm mt-1">{errors.demoUrl}</p>
                )}
              </div>

              <div>
                <label className="block text-sm font-medium text-base mb-2">
                  –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub
                </label>
                <input
                  type="url"
                  value={formData.githubUrl}
                  onChange={(e) => handleFieldChange("githubUrl", e.target.value)}
                  className={`w-full px-3 py-2 bg-subtle border rounded-md text-base
                             focus:border-neon focus:ring-1 focus:ring-neon transition-colors
                             ${errors.githubUrl ? "border-red-500" : "border-line"}`}
                  placeholder="https://github.com/user/repo"
                />
                {errors.githubUrl && (
                  <p className="text-red-400 text-sm mt-1">{errors.githubUrl}</p>
                )}
              </div>
            </div>

            {/* –¢–µ–≥–∏ */}
            <div>
              <label className="block text-sm font-medium text-base mb-2">
                –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ *
              </label>
              
              {/* –ü–æ–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–≥–∞ */}
              <div className="flex gap-2 mb-3">
                <input
                  type="text"
                  value={currentTag}
                  onChange={(e) => setCurrentTag(e.target.value)}
                  onKeyPress={(e) => e.key === "Enter" && (e.preventDefault(), handleAddTag())}
                  className="flex-1 px-3 py-2 bg-subtle border border-line rounded-md text-base
                           focus:border-neon focus:ring-1 focus:ring-neon transition-colors"
                  placeholder="–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é"
                  list="available-tags"
                />
                <button
                  type="button"
                  onClick={handleAddTag}
                  className="px-3 py-2 bg-neon/20 border border-neon text-neon rounded-md
                           hover:bg-neon/30 transition-colors"
                >
                  ‚ûï
                </button>
              </div>

              {/* –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ */}
              <datalist id="available-tags">
                {availableTags.map(tag => (
                  <option key={tag} value={tag} />
                ))}
              </datalist>

              {/* –°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö —Ç–µ–≥–æ–≤ */}
              <div className="flex flex-wrap gap-2">
                {formData.tags.map((tag) => (
                  <span
                    key={tag}
                    className="flex items-center px-3 py-1 bg-panel border border-line 
                             rounded-full text-sm"
                  >
                    {tag}
                    <button
                      type="button"
                      onClick={() => handleRemoveTag(tag)}
                      className="ml-2 text-soft hover:text-red-400 transition-colors"
                    >
                      ‚úï
                    </button>
                  </span>
                ))}
              </div>
              {errors.tags && (
                <p className="text-red-400 text-sm mt-1">{errors.tags}</p>
              )}
            </div>

            {/* –ò–∑–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç */}
            <div className="flex items-center">
              <input
                type="checkbox"
                id="featured"
                checked={formData.featured}
                onChange={(e) => handleFieldChange("featured", e.target.checked)}
                className="mr-2"
              />
              <label htmlFor="featured" className="text-sm text-base">
                ‚≠ê –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
              </label>
            </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <ModalFooter>
          <button
            type="button"
            onClick={onClose}
            className="px-4 py-2 bg-subtle border border-line text-base
                     hover:border-soft rounded-md transition-colors"
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            type="submit"
            disabled={createMutation.isPending || updateMutation.isPending || isFileUploading}
            className="px-6 py-2 bg-neon/20 border border-neon text-neon
                     hover:bg-neon/30 hover:shadow-neon rounded-md font-medium
                     disabled:opacity-50 disabled:cursor-not-allowed
                     bevel transition-all duration-300 flex items-center gap-2"
          >
            {isFileUploading && (
              <div className="animate-spin rounded-full h-4 w-4 border-2 border-neon border-t-transparent"></div>
            )}
            {isFileUploading ? "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..." : (createMutation.isPending || updateMutation.isPending) ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : (isCreating ? "–°–æ–∑–¥–∞—Ç—å" : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")}
          </button>
        </ModalFooter>
      </form>
    </Modal>
  );
}