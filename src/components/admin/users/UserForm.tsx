'use client';

import React, { useState, useCallback } from 'react';
import { api } from '../../../utils/api';
import { UserStatusBadge } from './UserStatusBadge';
import { Spinner } from '../../ui/loaders';

// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
interface UserFormData {
	id: string;
	name: string;
	email: string;
	role: 'USER' | 'ADMIN';
	image?: string | null;
	_count?: {
		projects: number;
		generalMessages: number;
		aiMessages: number;
	};
}

// –ü—Ä–æ–ø—Å—ã –¥–ª—è UserForm
interface UserFormProps {
	user: UserFormData;
	onClose: () => void;
	onSave?: (updatedUser: UserFormData) => void;
}

/**
 * –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ä–æ–ª—å –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function UserForm({ user, onClose, onSave }: UserFormProps) {
	const [selectedRole, setSelectedRole] = useState<'USER' | 'ADMIN'>(
		user.role,
	);
	const [showConfirmation, setShowConfirmation] = useState(false);
	const [actionType, setActionType] = useState<'role' | 'block' | null>(null);

	// –ú—É—Ç–∞—Ü–∏–∏ tRPC
	const updateRoleMutation = api.admin.users.updateRole.useMutation();
	const toggleBlockMutation = api.admin.users.toggleBlock.useMutation();

	// –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const { data: –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å } = api.admin.users.getActivity.useQuery({
		userId: user.id,
		days: 30,
	});

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è–†–æ–ª–∏ = useCallback((newRole: 'USER' | 'ADMIN') => {
		setSelectedRole(newRole);
		setActionType('role');
		setShowConfirmation(true);
	}, []);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏ = useCallback(() => {
		setActionType('block');
		setShowConfirmation(true);
	}, []);

	// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
	const –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å–î–µ–π—Å—Ç–≤–∏–µ = useCallback(async () => {
		if (actionType === 'role') {
			try {
				await updateRoleMutation.mutateAsync({
					userId: user.id,
					role: selectedRole,
				});

				onSave?.({ ...user, role: selectedRole });
				onClose();
			} catch (error) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏:', error);
				alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
			}
		} else if (actionType === 'block') {
			try {
				await toggleBlockMutation.mutateAsync({
					userId: user.id,
				});

				// –ó–∞–≥–ª—É—à–∫–∞ - —Ñ—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞
				console.log('–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ');
				onClose();
			} catch (error) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ:', error);
				alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏');
			}
		}

		setShowConfirmation(false);
		setActionType(null);
	}, [
		actionType,
		selectedRole,
		user,
		updateRoleMutation,
		toggleBlockMutation,
		onSave,
		onClose,
	]);

	// –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è
	const –æ—Ç–º–µ–Ω–∏—Ç—å–î–µ–π—Å—Ç–≤–∏–µ = useCallback(() => {
		setSelectedRole(user.role);
		setShowConfirmation(false);
		setActionType(null);
	}, [user.role]);

	return (
		<div className='fixed inset-0 bg-bg/90 flex items-center justify-center z-50'>
			<div className='bg-panel border border-line rounded-lg bevel shadow-neon max-w-2xl w-full m-4'>
				{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
				<div className='flex items-center justify-between p-6 border-b border-line'>
					<h2 className='text-xl font-bold text-neon glyph-glow'>
						–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					</h2>
					<button
						onClick={onClose}
						className='text-soft hover:text-base transition-colors'
					>
						<svg
							className='w-6 h-6'
							fill='none'
							stroke='currentColor'
							viewBox='0 0 24 24'
						>
							<path
								strokeLinecap='round'
								strokeLinejoin='round'
								strokeWidth={2}
								d='M6 18L18 6M6 6l12 12'
							/>
						</svg>
					</button>
				</div>

				{/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
				<div className='p-6 space-y-6'>
					{/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
					<div className='flex items-center space-x-4'>
						<div className='flex-shrink-0'>
							{user.image ?
								<img
									className='h-16 w-16 rounded-full border-2 border-neon shadow-neon'
									src={user.image}
									alt={`–ê–≤–∞—Ç–∞—Ä ${user.name}`}
								/>
							:	<div className='h-16 w-16 rounded-full bg-subtle border-2 border-neon flex items-center justify-center shadow-neon'>
									<span className='text-2xl font-bold text-neon glyph-glow'>
										{user.name.charAt(0).toUpperCase()}
									</span>
								</div>
							}
						</div>
						<div className='flex-1 min-w-0'>
							<h3 className='text-lg font-medium text-base'>
								{user.name}
							</h3>
							<p className='text-sm text-soft'>{user.email}</p>
							<div className='mt-2'>
								<UserStatusBadge
									role={user.role}
									isBlocked={false}
								/>
							</div>
						</div>
					</div>

					{/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
					{–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å && (
						<div className='grid grid-cols-2 gap-4'>
							<div className='bg-subtle p-4 rounded-lg border border-line'>
								<div className='text-sm text-soft'>
									–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ 30 –¥–Ω–µ–π
								</div>
								<div className='mt-2 space-y-1'>
									<div className='flex justify-between'>
										<span className='text-xs text-soft'>
											–ü—Ä–æ–µ–∫—Ç—ã:
										</span>
										<span className='text-xs text-neon font-mono glyph-glow'>
											{–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.summary.projectsCreated}
										</span>
									</div>
									<div className='flex justify-between'>
										<span className='text-xs text-soft'>
											–°–æ–æ–±—â–µ–Ω–∏—è:
										</span>
										<span className='text-xs text-cyan font-mono'>
											{–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.summary
												.messagesGeneral +
												–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.summary.messagesAi}
										</span>
									</div>
								</div>
							</div>
							<div className='bg-subtle p-4 rounded-lg border border-line'>
								<div className='text-sm text-soft'>
									–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
								</div>
								<div className='mt-2 space-y-1'>
									<div className='flex justify-between'>
										<span className='text-xs text-soft'>
											–í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤:
										</span>
										<span className='text-xs text-neon font-mono glyph-glow'>
											{user._count?.projects || 0}
										</span>
									</div>
									<div className='flex justify-between'>
										<span className='text-xs text-soft'>
											–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:
										</span>
										<span className='text-xs text-cyan font-mono'>
											{(user._count?.generalMessages ||
												0) +
												(user._count?.aiMessages || 0)}
										</span>
									</div>
								</div>
							</div>
						</div>
					)}

					{/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—å—é */}
					<div className='space-y-3'>
						<label className='block text-sm font-medium text-base'>
							–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
						</label>
						<div className='flex space-x-4'>
							<button
								onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è–†–æ–ª–∏('USER')}
								className={`px-4 py-2 rounded-md border transition-all bevel
                  ${
						selectedRole === 'USER' ?
							'bg-cyan/20 border-cyan text-cyan shadow-neon'
						:	'bg-panel border-line text-soft hover:border-cyan'
					}`}
							>
								üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
							</button>
							<button
								onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è–†–æ–ª–∏('ADMIN')}
								className={`px-4 py-2 rounded-md border transition-all bevel
                  ${
						selectedRole === 'ADMIN' ?
							'bg-neon/20 border-neon text-neon shadow-neon glyph-glow'
						:	'bg-panel border-line text-soft hover:border-neon'
					}`}
							>
								‚ö° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
							</button>
						</div>
					</div>

					{/* –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
					<div className='space-y-3'>
						<label className='block text-sm font-medium text-base'>
							–î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:
						</label>
						<button
							onClick={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏}
							className='px-4 py-2 rounded-md border transition-all bevel bg-gray-500/20 border-gray-500 text-gray-400 cursor-not-allowed'
							disabled
						>
							üöß –§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ
						</button>
					</div>
				</div>

				{/* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π */}
				{showConfirmation && (
					<div className='bg-subtle border-t border-line p-6'>
						<div className='text-sm text-soft mb-4'>
							{actionType === 'role' && (
								<>
									–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å
									–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "
									{selectedRole === 'ADMIN' ?
										'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
									:	'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
									"?
								</>
							)}
							{actionType === 'block' && (
								<>
									–§—É–Ω–∫—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±—É–¥–µ—Ç
									–¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö
								</>
							)}
						</div>
						<div className='flex space-x-3'>
							<button
								onClick={–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å–î–µ–π—Å—Ç–≤–∏–µ}
								disabled={
									updateRoleMutation.isPending ||
									toggleBlockMutation.isPending
								}
								className='px-4 py-2 bg-neon/20 border border-neon text-neon rounded-md
                         hover:bg-neon/30 transition-colors bevel shadow-neon
                         disabled:opacity-50 disabled:cursor-not-allowed'
							>
								{(
									updateRoleMutation.isPending ||
									toggleBlockMutation.isPending
								) ?
									<div className='flex items-center gap-2'>
										<Spinner
											size='small'
											variant='inline'
										/>
										<span>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...</span>
									</div>
								:	'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'}
							</button>
							<button
								onClick={–æ—Ç–º–µ–Ω–∏—Ç—å–î–µ–π—Å—Ç–≤–∏–µ}
								className='px-4 py-2 bg-panel border border-line text-soft rounded-md
                         hover:bg-hover transition-colors bevel'
							>
								–û—Ç–º–µ–Ω–∞
							</button>
						</div>
					</div>
				)}

				{/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
				{!showConfirmation && (
					<div className='bg-subtle border-t border-line px-6 py-3 flex justify-end space-x-3'>
						<button
							onClick={onClose}
							className='px-4 py-2 bg-panel border border-line text-soft rounded-md
                       hover:bg-hover transition-colors bevel'
						>
							–ó–∞–∫—Ä—ã—Ç—å
						</button>
					</div>
				)}
			</div>
		</div>
	);
}
