"use client";

import React, { useState, useCallback } from "react";
import { api } from "../../../utils/api";

interface SystemSettingsData {
  siteName: string;
  siteDescription: string;
  maintenanceMode: boolean;
  allowRegistration: boolean;
  maxFileSize: number;
  timezone: string;
  language: string;
}

interface SystemSettingsProps {
  onRestart: () => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±—â–∏—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∞–π—Ç–∞, —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã, –ª–∏–º–∏—Ç—ã
 */
export function SystemSettings({ 
  onRestart 
}: SystemSettingsProps) {

  const [—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, set–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ API
  const { data: settings, isLoading, refetch } = api.settings.getSystemSettings.useQuery();
  
  // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫, set–§–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫] = useState<SystemSettingsData>({
    siteName: "Kirdro Portfolio Admin",
    siteDescription: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
    maintenanceMode: false,
    allowRegistration: false,
    maxFileSize: 10,
    timezone: "Europe/Moscow",
    language: "ru",
  });

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö
  React.useEffect(() => {
    if (settings) {
      set–§–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫(settings);
    }
  }, [settings]);

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const saveSettingsMutation = api.settings.setSystemSettings.useMutation({
    onSuccess: () => {
      void refetch();
      set–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ(false);
    },
    onError: (error) => {
      console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:", error);
      set–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ(false);
    },
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–æ—Ä–º—ã
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è = useCallback((field: keyof SystemSettingsData, value: any) => {
    set–§–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫(prev => ({
      ...prev,
      [field]: value
    }));
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è = useCallback(() => {
    set–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ(true);
    saveSettingsMutation.mutate(—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫);
  }, [—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫, saveSettingsMutation]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ –∫ –∏—Å—Ö–æ–¥–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–±—Ä–æ—Å–∞ = useCallback(() => {
    if (settings) {
      set–§–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫(settings);
    }
  }, [settings]);

  if (isLoading) {
    return (
      <div className="flex items-center justify-center py-12">
        <div className="text-neon text-lg">
          ‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞ */}
      <div className="bg-subtle border border-line rounded-lg bevel p-6">
        <h3 className="text-lg font-bold text-base mb-4 flex items-center space-x-2">
          <span>üåê</span>
          <span>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞</span>
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label className="block text-sm font-medium text-soft mb-2">
              –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞
            </label>
            <input
              type="text"
              value={—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫.siteName}
              onChange={(e) => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è('siteName', e.target.value)}
              className="w-full px-4 py-2 bg-panel border border-line rounded text-base
                       focus:border-neon focus:ring-1 focus:ring-neon transition-colors"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-soft mb-2">
              –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å
            </label>
            <select
              value={—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫.timezone}
              onChange={(e) => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è('timezone', e.target.value)}
              className="w-full px-4 py-2 bg-panel border border-line rounded text-base
                       focus:border-neon transition-colors"
            >
              <option value="Europe/Moscow">üá∑üá∫ –ú–æ—Å–∫–≤–∞ (UTC+3)</option>
              <option value="Europe/London">üá¨üáß –õ–æ–Ω–¥–æ–Ω (UTC+0)</option>
              <option value="America/New_York">üá∫üá∏ –ù—å—é-–ô–æ—Ä–∫ (UTC-5)</option>
              <option value="Asia/Tokyo">üáØüáµ –¢–æ–∫–∏–æ (UTC+9)</option>
            </select>
          </div>

          <div className="md:col-span-2">
            <label className="block text-sm font-medium text-soft mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ —Å–∞–π—Ç–∞
            </label>
            <textarea
              value={—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫.siteDescription}
              onChange={(e) => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è('siteDescription', e.target.value)}
              rows={3}
              className="w-full px-4 py-2 bg-panel border border-line rounded text-base
                       focus:border-neon focus:ring-1 focus:ring-neon transition-colors
                       resize-vertical"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-soft mb-2">
              –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            </label>
            <select
              value={—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫.language}
              onChange={(e) => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è('language', e.target.value)}
              className="w-full px-4 py-2 bg-panel border border-line rounded text-base
                       focus:border-neon transition-colors"
            >
              <option value="ru">üá∑üá∫ –†—É—Å—Å–∫–∏–π</option>
              <option value="en">üá∫üá∏ English</option>
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-soft mb-2">
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (MB)
            </label>
            <input
              type="number"
              min="1"
              max="100"
              value={—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫.maxFileSize}
              onChange={(e) => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è('maxFileSize', parseInt(e.target.value))}
              className="w-full px-4 py-2 bg-panel border border-line rounded text-base
                       focus:border-neon focus:ring-1 focus:ring-neon transition-colors"
            />
          </div>
        </div>
      </div>

      {/* –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã */}
      <div className="bg-subtle border border-line rounded-lg bevel p-6">
        <h3 className="text-lg font-bold text-base mb-4 flex items-center space-x-2">
          <span>‚öôÔ∏è</span>
          <span>–†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã</span>
        </h3>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="space-y-4">
            <div className="flex items-center justify-between p-3 bg-panel rounded border border-line">
              <div>
                <div className="font-medium text-base">–†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è</div>
                <div className="text-sm text-soft">–í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–π—Ç–∞</div>
              </div>
              <label className="relative inline-flex items-center cursor-pointer">
                <input
                  type="checkbox"
                  checked={—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫.maintenanceMode}
                  onChange={(e) => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è('maintenanceMode', e.target.checked)}
                  className="sr-only peer"
                />
                <div className="w-11 h-6 bg-gray-600 peer-focus:outline-none rounded-full peer
                             peer-checked:after:translate-x-full peer-checked:after:border-white 
                             after:content-[''] after:absolute after:top-[2px] after:left-[2px] 
                             after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all
                             peer-checked:bg-neon"></div>
              </label>
            </div>
          </div>

          <div className="space-y-4">
            <div className="flex items-center justify-between p-3 bg-panel rounded border border-line">
              <div>
                <div className="font-medium text-base">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
                <div className="text-sm text-soft">–û—Ç–∫—Ä—ã—Ç–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</div>
              </div>
              <label className="relative inline-flex items-center cursor-pointer">
                <input
                  type="checkbox"
                  checked={—Ñ–æ—Ä–º–∞–ù–∞—Å—Ç—Ä–æ–µ–∫.allowRegistration}
                  onChange={(e) => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ò–∑–º–µ–Ω–µ–Ω–∏—è('allowRegistration', e.target.checked)}
                  className="sr-only peer"
                />
                <div className="w-11 h-6 bg-gray-600 peer-focus:outline-none rounded-full peer
                             peer-checked:after:translate-x-full peer-checked:after:border-white 
                             after:content-[''] after:absolute after:top-[2px] after:left-[2px] 
                             after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all
                             peer-checked:bg-green-400"></div>
              </label>
            </div>
          </div>
        </div>
      </div>


      {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="flex items-center justify-between p-4 bg-panel border border-line rounded-lg bevel">
        <div className="flex items-center space-x-3">
          <button
            onClick={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–±—Ä–æ—Å–∞}
            className="px-4 py-2 bg-subtle border border-line text-soft
                     hover:border-soft hover:text-base rounded font-medium
                     transition-colors"
          >
            üîÑ –°–±—Ä–æ—Å–∏—Ç—å
          </button>
          <button
            onClick={onRestart}
            className="px-4 py-2 bg-yellow-400/20 border border-yellow-400 text-yellow-400
                     hover:bg-yellow-400/30 rounded font-medium transition-colors"
          >
            ‚ö° –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
          </button>
        </div>

        <button
          onClick={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è}
          disabled={—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ}
          className="px-6 py-2 bg-neon/20 border border-neon text-neon
                   hover:bg-neon/30 hover:shadow-neon disabled:opacity-50
                   disabled:cursor-not-allowed rounded font-medium
                   bevel transition-all duration-300"
        >
          {—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ? "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"}
        </button>
      </div>
    </div>
  );
}