"use client";

import React, { useState, useCallback } from "react";
import { api } from "../../../utils/api";

interface –°–æ–æ–±—â–µ–Ω–∏–µ {
  id: string;
  sender: "admin" | "ai";
  content: string;
  timestamp: string;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å AI –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å AI –º–æ–¥–µ–ª—å –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export function AiChatInterface() {
  const [—Å–æ–æ–±—â–µ–Ω–∏—è, set–°–æ–æ–±—â–µ–Ω–∏—è] = useState<–°–æ–æ–±—â–µ–Ω–∏–µ[]>([
    {
      id: "1",
      sender: "ai",
      content: "–ü—Ä–∏–≤–µ—Ç! –Ø AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å–∞–π—Ç–∞ Kirdro. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏–ª–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö.",
      timestamp: "14:30"
    }
  ]);
  
  const [—Ç–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è, set–¢–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è] = useState("");
  const [–æ—Ç–ø—Ä–∞–≤–∫–∞, set–û—Ç–ø—Ä–∞–≤–∫–∞] = useState(false);
  const [–≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å, set–í—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å] = useState("llama-3.3-70b-versatile");
  const [–ø—Ä–æ–≤–∞–π–¥–µ—Ä, set–ü—Ä–æ–≤–∞–π–¥–µ—Ä] = useState("groq");

  // tRPC –º—É—Ç–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ AI
  const testSettingsMutation = api.aiChat.testSettings.useMutation({
    onSuccess: (—Ä–µ–∑—É–ª—å—Ç–∞—Ç) => {
      const –æ—Ç–≤–µ—ÇAI: –°–æ–æ–±—â–µ–Ω–∏–µ = {
        id: Date.now().toString(),
        sender: "ai",
        content: —Ä–µ–∑—É–ª—å—Ç–∞—Ç.–æ—Ç–≤–µ—ÇAI,
        timestamp: new Date().toLocaleTimeString("ru-RU", { hour: "2-digit", minute: "2-digit" })
      };
      set–°–æ–æ–±—â–µ–Ω–∏—è(prev => [...prev, –æ—Ç–≤–µ—ÇAI]);
      set–û—Ç–ø—Ä–∞–≤–∫–∞(false);
    },
    onError: (error) => {
      const –æ—Ç–≤–µ—ÇAI: –°–æ–æ–±—â–µ–Ω–∏–µ = {
        id: Date.now().toString(),
        sender: "ai",
        content: `–û—à–∏–±–∫–∞: ${error.message}`,
        timestamp: new Date().toLocaleTimeString("ru-RU", { hour: "2-digit", minute: "2-digit" })
      };
      set–°–æ–æ–±—â–µ–Ω–∏—è(prev => [...prev, –æ—Ç–≤–µ—ÇAI]);
      set–û—Ç–ø—Ä–∞–≤–∫–∞(false);
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–û—Ç–ø—Ä–∞–≤–∫–∏ = useCallback(async () => {
    if (!—Ç–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è.trim() || –æ—Ç–ø—Ä–∞–≤–∫–∞) return;

    const –Ω–æ–≤–æ–µ–°–æ–æ–±—â–µ–Ω–∏–µ: –°–æ–æ–±—â–µ–Ω–∏–µ = {
      id: Date.now().toString(),
      sender: "admin",
      content: —Ç–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è.trim(),
      timestamp: new Date().toLocaleTimeString("ru-RU", { hour: "2-digit", minute: "2-digit" })
    };

    set–°–æ–æ–±—â–µ–Ω–∏—è(prev => [...prev, –Ω–æ–≤–æ–µ–°–æ–æ–±—â–µ–Ω–∏–µ]);
    set–¢–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è("");
    set–û—Ç–ø—Ä–∞–≤–∫–∞(true);

    // –†–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ tRPC –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AI
    const –º–æ–¥–µ–ª—å = –≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å.includes('llama') || –≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å.includes('gemma') || –≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å.includes('deepseek') 
      ? –≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å as "llama3-8b-8192" | "llama3-70b-8192" | "mixtral-8x7b-32768"
      : "llama3-8b-8192";
      
    testSettingsMutation.mutate({
      —Ç–µ—Å—Ç–æ–≤–æ–µ–°–æ–æ–±—â–µ–Ω–∏–µ: —Ç–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è.trim(),
      –º–æ–¥–µ–ª—å
    });
  }, [—Ç–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–∫–∞, –≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å, testSettingsMutation]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫Enter = useCallback((e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–û—Ç–ø—Ä–∞–≤–∫–∏();
    }
  }, [–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–û—Ç–ø—Ä–∞–≤–∫–∏]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
  const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–û—á–∏—Å—Ç–∫–∏ = useCallback(() => {
    if (confirm("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞?")) {
      set–°–æ–æ–±—â–µ–Ω–∏—è([]);
    }
  }, []);

  return (
    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞ */}
      <div className="lg:col-span-2 space-y-4">
        <div className="bg-subtle border border-line rounded-lg bevel overflow-hidden">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
          <div className="bg-panel border-b border-line p-4 flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-8 h-8 bg-neon/20 rounded border border-neon flex items-center justify-center">
                <span className="text-neon text-sm">ü§ñ</span>
              </div>
              <div>
                <div className="font-medium text-base">AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç Kirdro</div>
                <div className="text-xs text-soft">
                  <span className="w-2 h-2 bg-green-400 rounded-full inline-block mr-1"></span>
                  –û–Ω–ª–∞–π–Ω ‚Ä¢ {–ø—Ä–æ–≤–∞–π–¥–µ—Ä.toUpperCase()} ‚Ä¢ {–≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å.split('/').pop()}
                </div>
              </div>
            </div>
            <button
              onClick={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–û—á–∏—Å—Ç–∫–∏}
              className="px-3 py-1 bg-red-400/20 border border-red-400 text-red-400 
                       hover:bg-red-400/30 rounded text-sm transition-colors"
            >
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
            </button>
          </div>

          {/* –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π */}
          <div className="h-96 overflow-y-auto p-4 space-y-4">
            {—Å–æ–æ–±—â–µ–Ω–∏—è.map((—Å–æ–æ–±—â–µ–Ω–∏–µ) => (
              <div
                key={—Å–æ–æ–±—â–µ–Ω–∏–µ.id}
                className={`flex ${—Å–æ–æ–±—â–µ–Ω–∏–µ.sender === "admin" ? "justify-end" : "justify-start"}`}
              >
                <div
                  className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${
                    —Å–æ–æ–±—â–µ–Ω–∏–µ.sender === "admin"
                      ? "bg-neon/20 border border-neon text-neon ml-4"
                      : "bg-cyan/20 border border-cyan text-cyan mr-4"
                  }`}
                >
                  <div className="text-sm">{—Å–æ–æ–±—â–µ–Ω–∏–µ.content}</div>
                  <div className="text-xs opacity-70 mt-1">{—Å–æ–æ–±—â–µ–Ω–∏–µ.timestamp}</div>
                </div>
              </div>
            ))}
            
            {–æ—Ç–ø—Ä–∞–≤–∫–∞ && (
              <div className="flex justify-start">
                <div className="max-w-xs lg:max-w-md px-4 py-2 rounded-lg bg-cyan/20 border border-cyan text-cyan mr-4">
                  <div className="flex items-center space-x-2">
                    <div className="flex space-x-1">
                      <div className="w-2 h-2 bg-cyan rounded-full animate-pulse"></div>
                      <div className="w-2 h-2 bg-cyan rounded-full animate-pulse delay-75"></div>
                      <div className="w-2 h-2 bg-cyan rounded-full animate-pulse delay-150"></div>
                    </div>
                    <span className="text-xs">AI –ø–µ—á–∞—Ç–∞–µ—Ç...</span>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
          <div className="border-t border-line p-4">
            <div className="flex space-x-3">
              <textarea
                value={—Ç–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è}
                onChange={(e) => set–¢–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è(e.target.value)}
                onKeyDown={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫Enter}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è AI (Enter - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, Shift+Enter - –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞)..."
                className="flex-1 px-4 py-2 bg-panel border border-line rounded text-base
                         focus:border-neon focus:ring-1 focus:ring-neon transition-colors
                         resize-none"
                rows={2}
              />
              <button
                onClick={–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–û—Ç–ø—Ä–∞–≤–∫–∏}
                disabled={!—Ç–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è.trim() || –æ—Ç–ø—Ä–∞–≤–∫–∞}
                className="px-4 py-2 bg-neon/20 border border-neon text-neon
                         hover:bg-neon/30 disabled:opacity-50 disabled:cursor-not-allowed
                         rounded font-medium transition-colors"
              >
                {–æ—Ç–ø—Ä–∞–≤–∫–∞ ? "‚è≥" : "üì§"} –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="space-y-4">
        {/* –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ */}
        <div className="bg-subtle border border-line rounded-lg bevel p-4">
          <h3 className="font-bold text-base mb-3 flex items-center space-x-2">
            <span>ü§ñ</span>
            <span>–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏</span>
          </h3>
          
          <div className="space-y-3">
            <div>
              <label className="block text-xs font-medium text-soft mb-1">
                –ü—Ä–æ–≤–∞–π–¥–µ—Ä
              </label>
              <select
                value={–ø—Ä–æ–≤–∞–π–¥–µ—Ä}
                onChange={(e) => {
                  set–ü—Ä–æ–≤–∞–π–¥–µ—Ä(e.target.value);
                  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –º–æ–¥–µ–ª—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
                  if (e.target.value === "groq") {
                    set–í—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å("llama-3.3-70b-versatile");
                  } else {
                    set–í—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å("gpt-4-turbo");
                  }
                }}
                className="w-full px-3 py-2 bg-panel border border-line rounded text-sm
                         focus:border-neon focus:ring-1 focus:ring-neon transition-colors"
              >
                <option value="groq">Groq</option>
                <option value="openai">OpenAI</option>
              </select>
            </div>
            
            <div>
              <label className="block text-xs font-medium text-soft mb-1">
                –ú–æ–¥–µ–ª—å AI
              </label>
              <select
                value={–≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å}
                onChange={(e) => set–í—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å(e.target.value)}
                className="w-full px-3 py-2 bg-panel border border-line rounded text-sm
                         focus:border-neon focus:ring-1 focus:ring-neon transition-colors"
              >
                {–ø—Ä–æ–≤–∞–π–¥–µ—Ä === "groq" ? (
                  <>
                    <optgroup label="–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ">
                      <option value="llama-3.3-70b-versatile">Llama 3.3 70B</option>
                      <option value="deepseek-r1-distill-llama-70b">DeepSeek R1 70B</option>
                      <option value="openai/gpt-oss-120b">GPT OSS 120B</option>
                    </optgroup>
                    <optgroup label="–ë—ã—Å—Ç—Ä—ã–µ">
                      <option value="llama-3.1-8b-instant">Llama 3.1 8B</option>
                      <option value="gemma2-9b-it">Gemma2 9B</option>
                      <option value="groq/compound-mini">Compound Mini</option>
                    </optgroup>
                  </>
                ) : (
                  <>
                    <option value="gpt-3.5-turbo">GPT-3.5 Turbo</option>
                    <option value="gpt-4">GPT-4</option>
                    <option value="gpt-4-turbo">GPT-4 Turbo</option>
                  </>
                )}
              </select>
            </div>
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã */}
        <div className="bg-subtle border border-line rounded-lg bevel p-4">
          <h3 className="font-bold text-base mb-3 flex items-center space-x-2">
            <span>‚ö°</span>
            <span>–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã</span>
          </h3>
          
          <div className="space-y-2">
            <button
              onClick={() => set–¢–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è("–†–∞—Å—Å–∫–∞–∂–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –ö–∏—Ä–∏–ª–ª–∞")}
              className="w-full p-2 bg-panel border border-line hover:border-cyan 
                       hover:bg-cyan/10 rounded text-left text-sm transition-colors"
            >
              üìÅ –û –ø—Ä–æ–µ–∫—Ç–∞—Ö
            </button>
            <button
              onClick={() => set–¢–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è("–ö–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –µ—Å—Ç—å —É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞?")}
              className="w-full p-2 bg-panel border border-line hover:border-purple-400 
                       hover:bg-purple-400/10 rounded text-left text-sm transition-colors"
            >
              ‚ö° –ù–∞–≤—ã–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
            </button>
            <button
              onClick={() => set–¢–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è("–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ö–∏—Ä–∏–ª–ª–æ–º –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞?")}
              className="w-full p-2 bg-panel border border-line hover:border-green-400 
                       hover:bg-green-400/10 rounded text-left text-sm transition-colors"
            >
              üìÆ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </button>
            <button
              onClick={() => set–¢–µ–∫—Å—Ç–°–æ–æ–±—â–µ–Ω–∏—è("–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π —Å–≤–æ—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å")}
              className="w-full p-2 bg-panel border border-line hover:border-yellow-400 
                       hover:bg-yellow-400/10 rounded text-left text-sm transition-colors"
            >
              üß™ –¢–µ—Å—Ç AI
            </button>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏ */}
        <div className="bg-subtle border border-line rounded-lg bevel p-4">
          <h3 className="font-bold text-base mb-3 flex items-center space-x-2">
            <span>üìä</span>
            <span>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏</span>
          </h3>
          
          <div className="space-y-2 text-sm">
            <div className="flex justify-between">
              <span className="text-soft">–°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:</span>
              <span className="text-neon font-mono">{—Å–æ–æ–±—â–µ–Ω–∏—è.filter(m => m.sender === "admin").length}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-soft">–û—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ:</span>
              <span className="text-cyan font-mono">{—Å–æ–æ–±—â–µ–Ω–∏—è.filter(m => m.sender === "ai").length}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-soft">–í—Ä–µ–º—è —Å–µ—Å—Å–∏–∏:</span>
              <span className="text-purple-400 font-mono">15:42</span>
            </div>
          </div>
        </div>

        {/* –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-subtle border border-line rounded-lg bevel p-4">
          <h3 className="font-bold text-base mb-3 flex items-center space-x-2">
            <span>‚ÑπÔ∏è</span>
            <span>–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</span>
          </h3>
          
          <div className="space-y-2 text-sm">
            <div className="flex justify-between">
              <span className="text-soft">–ú–æ–¥–µ–ª—å AI:</span>
              <span className="text-base text-xs">{–≤—ã–±—Ä–∞–Ω–Ω–∞—è–ú–æ–¥–µ–ª—å.split('/').pop()}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-soft">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</span>
              <span className="text-base">0.7</span>
            </div>
            <div className="flex justify-between">
              <span className="text-soft">–ú–∞–∫—Å. —Ç–æ–∫–µ–Ω–æ–≤:</span>
              <span className="text-base">2048</span>
            </div>
            <div className="flex justify-between">
              <span className="text-soft">–°—Ç–∞—Ç—É—Å API:</span>
              <span className="text-green-400">üü¢ –ê–∫—Ç–∏–≤–µ–Ω</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}