'use client';

import React, { useState, useCallback } from 'react';
import Image from 'next/image';
import type { ChatMessageData } from '../../../app/(dashboard)/chat/page';

interface ChatMessagesProps {
	messages: ChatMessageData[];
	type: 'general' | 'ai';
	loading: boolean;
	onMessageSelect: (message: ChatMessageData) => void;
	onDeleteMessage: (messageId: string) => void;
	onBanUser: (userId: string) => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
 * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –æ–±—â–∏–º –∏ –ò–ò —á–∞—Ç–æ–º, –ø–∞–≥–∏–Ω–∞—Ü–∏—è, –º–æ–¥–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
 */
export function ChatMessages({
	messages,
	type,
	loading,
	onMessageSelect,
	onDeleteMessage,
	onBanUser,
}: ChatMessagesProps) {
	const [selectedMessageId, setSelectedMessageId] = useState<string | null>(
		null,
	);
	const [searchQuery, setSearchQuery] = useState('');
	const [filterUser, setFilterUser] = useState('');

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–°–æ–æ–±—â–µ–Ω–∏—è = useCallback(
		(message: ChatMessageData) => {
			setSelectedMessageId(message.id);
			onMessageSelect(message);
		},
		[onMessageSelect],
	);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–£–¥–∞–ª–µ–Ω–∏—è–°–æ–æ–±—â–µ–Ω–∏—è = useCallback(
		(messageId: string, e: React.MouseEvent) => {
			e.stopPropagation();
			if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ?')) {
				onDeleteMessage(messageId);
			}
		},
		[onDeleteMessage],
	);

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è = useCallback(
		(userId: string, e: React.MouseEvent) => {
			e.stopPropagation();
			if (confirm('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')) {
				onBanUser(userId);
			}
		},
		[onBanUser],
	);

	// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
	const –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ–°–æ–æ–±—â–µ–Ω–∏—è = messages.filter((message) => {
		const matchesSearch =
			searchQuery === '' ||
			message.content.toLowerCase().includes(searchQuery.toLowerCase()) ||
			message.userName.toLowerCase().includes(searchQuery.toLowerCase());

		const matchesUser =
			filterUser === '' || message.userName === filterUser;

		return matchesSearch && matchesUser;
	});

	// –ü–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
	const —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ = Array.from(
		new Set(messages.map((m) => m.userName)),
	).sort();

	// Loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	if (loading) {
		return (
			<div className='space-y-4'>
				{Array.from({ length: 5 }).map((_, index) => (
					<div
						key={index}
						className='animate-pulse'
					>
						<div className='flex items-start space-x-3 p-4 bg-subtle rounded-lg'>
							<div className='w-10 h-10 bg-panel rounded-full' />
							<div className='flex-1 space-y-2'>
								<div className='h-4 bg-panel rounded w-32' />
								<div className='h-3 bg-panel rounded w-full' />
								<div className='h-3 bg-panel rounded w-2/3' />
							</div>
						</div>
					</div>
				))}
			</div>
		);
	}

	// –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	if (messages.length === 0) {
		return (
			<div className='text-center py-12'>
				<div className='text-6xl mb-4'>
					{type === 'general' ? 'üí¨' : 'ü§ñ'}
				</div>
				<h3 className='text-xl font-bold text-base mb-2'>
					–°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
				</h3>
				<p className='text-soft'>
					{type === 'general' ?
						'–í –æ–±—â–µ–º —á–∞—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π'
					:	'–í –ò–ò —á–∞—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π'}
				</p>
			</div>
		);
	}

	return (
		<div className='space-y-4'>
			{/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
			<div className='flex flex-col md:flex-row gap-4 mb-6'>
				<div className='flex-1'>
					<input
						type='text'
						placeholder='–ü–æ–∏—Å–∫ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...'
						value={searchQuery}
						onChange={(e) => setSearchQuery(e.target.value)}
						className='w-full px-4 py-2 bg-subtle border border-line rounded-lg text-base
                     focus:border-neon focus:ring-1 focus:ring-neon transition-colors'
					/>
				</div>
				<div className='md:w-48'>
					<select
						value={filterUser}
						onChange={(e) => setFilterUser(e.target.value)}
						className='w-full px-4 py-2 bg-subtle border border-line rounded-lg text-base
                     focus:border-neon transition-colors'
					>
						<option value=''>–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</option>
						{—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.map((userName) => (
							<option
								key={userName}
								value={userName}
							>
								{userName}
							</option>
						))}
					</select>
				</div>
			</div>

			{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
			<div className='flex items-center justify-between text-sm text-soft mb-4'>
				<div>
					–ü–æ–∫–∞–∑–∞–Ω–æ {–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ–°–æ–æ–±—â–µ–Ω–∏—è.length} –∏–∑{' '}
					{messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π
				</div>
				<div className='flex items-center space-x-2'>
					<div
						className={`w-3 h-3 rounded-full ${type === 'general' ? 'bg-neon' : 'bg-cyan'}`}
					/>
					<span>{type === 'general' ? '–û–±—â–∏–π —á–∞—Ç' : '–ò–ò —á–∞—Ç'}</span>
				</div>
			</div>

			{/* –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π */}
			<div className='space-y-3 max-h-[600px] overflow-y-auto'>
				{–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ–°–æ–æ–±—â–µ–Ω–∏—è.map((message) => (
					<div
						key={message.id}
						onClick={() => –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–í—ã–±–æ—Ä–∞–°–æ–æ–±—â–µ–Ω–∏—è(message)}
						className={`p-4 rounded-lg border cursor-pointer transition-all duration-200 group
                       ${
							selectedMessageId === message.id ?
								`border-${type === 'general' ? 'neon' : 'cyan'} bg-${type === 'general' ? 'neon' : 'cyan'}/10`
							:	'border-line bg-subtle hover:border-soft hover:bg-panel'
						}`}
					>
						<div className='flex items-start justify-between'>
							{/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è */}
							<div className='flex items-start space-x-3 flex-1'>
								{/* –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
								<div className='relative w-10 h-10 rounded-full overflow-hidden border border-line'>
									{message.userAvatar ?
										<Image
											src={message.userAvatar}
											alt={message.userName}
											fill
											className='object-cover'
											sizes='40px'
										/>
									:	<div className='w-full h-full bg-panel flex items-center justify-center text-soft text-sm'>
											{message.userName
												.charAt(0)
												.toUpperCase()}
										</div>
									}
								</div>

								{/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è */}
								<div className='flex-1 min-w-0'>
									<div className='flex items-center space-x-2 mb-1'>
										<span className='font-medium text-base'>
											{message.userName}
										</span>
										<span className='text-xs text-soft font-mono'>
											{message.createdAt.toLocaleString(
												'ru-RU',
											)}
										</span>
										{message.isBlocked && (
											<span
												className='px-2 py-1 bg-red-500/20 border border-red-500 
                                   text-red-400 text-xs rounded font-mono'
											>
												–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
											</span>
										)}
									</div>
									<div className='text-sm text-soft break-words'>
										{message.content}
									</div>
								</div>
							</div>

							{/* –ö–Ω–æ–ø–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ */}
							<div className='flex items-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity'>
								<button
									onClick={(e) =>
										–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–£–¥–∞–ª–µ–Ω–∏—è–°–æ–æ–±—â–µ–Ω–∏—è(
											message.id,
											e,
										)
									}
									className='p-2 text-red-400 hover:bg-red-500/20 rounded transition-colors'
									title='–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'
								>
									üóëÔ∏è
								</button>
								{!message.isBlocked && (
									<button
										onClick={(e) =>
											–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(
												message.userId,
												e,
											)
										}
										className='p-2 text-orange-400 hover:bg-orange-400/20 rounded transition-colors'
										title='–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
									>
										üö´
									</button>
								)}
							</div>
						</div>
					</div>
				))}
			</div>

			{/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è (–∑–∞–≥–ª—É—à–∫–∞) */}
			{–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ–°–æ–æ–±—â–µ–Ω–∏—è.length > 10 && (
				<div className='flex justify-center mt-6'>
					<div className='flex items-center space-x-2'>
						<button
							className='px-3 py-1 bg-subtle border border-line rounded text-sm
                             hover:border-neon transition-colors'
						>
							‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–µ
						</button>
						<span className='text-sm text-soft px-3'>
							–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 3
						</span>
						<button
							className='px-3 py-1 bg-subtle border border-line rounded text-sm
                             hover:border-neon transition-colors'
						>
							–°–ª–µ–¥—É—é—â–∏–µ ‚Üí
						</button>
					</div>
				</div>
			)}
		</div>
	);
}
