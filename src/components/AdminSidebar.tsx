"use client";

import Link from "next/link";
import { usePathname } from "next/navigation";

interface AdminSidebarProps {
  isOpen: boolean;
  onToggle: () => void;
}

interface MenuItem {
  href: string;
  label: string;
  icon: string;
  description: string;
}

const menuItems: MenuItem[] = [
  {
    href: "/dashboard",
    label: "Dashboard",
    icon: "‚ö°",
    description: "–ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å"
  },
  {
    href: "/users",
    label: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
    icon: "üë•",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
  },
  {
    href: "/projects",
    label: "–ü—Ä–æ–µ–∫—Ç—ã",
    icon: "üöÄ",
    description: "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø—Ä–æ–µ–∫—Ç—ã"
  },
  {
    href: "/skills",
    label: "–ù–∞–≤—ã–∫–∏",
    icon: "‚ö°",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤—ã–∫–∞–º–∏"
  },
  {
    href: "/chat",
    label: "–ß–∞—Ç",
    icon: "üí¨",
    description: "–û–±—â–∏–π —á–∞—Ç —Å–∞–π—Ç–∞"
  },
  {
    href: "/ai-chat",
    label: "–ò–ò –ß–∞—Ç",
    icon: "ü§ñ",
    description: "–ß–∞—Ç —Å –ò–ò"
  },
  {
    href: "/blog",
    label: "–ë–ª–æ–≥",
    icon: "üìù",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–≥–æ–º"
  },
  {
    href: "/contacts",
    label: "–û–±—Ä–∞—â–µ–Ω–∏—è",
    icon: "üìß",
    description: "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã"
  },
  {
    href: "/settings",
    label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    icon: "‚öôÔ∏è",
    description: "–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"
  }
];

export default function AdminSidebar({ isOpen, onToggle }: AdminSidebarProps) {
  const pathname = usePathname();

  return (
    <div className={`fixed left-0 top-0 h-full z-20 transition-all duration-300 ${isOpen ? 'w-64' : 'w-16'}`}>
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="cyber-card h-full bg-black/80 border-r-2 border-green-500/30 backdrop-blur-md">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="p-4 border-b border-green-500/30">
          <div className="flex items-center justify-between">
            {isOpen && (
              <h2 className="text-xl font-mono font-bold glyph-glow" style={{color: '#00FF99'}}>
                ADMIN
              </h2>
            )}
            <button
              onClick={onToggle}
              className="p-2 rounded hover:bg-green-500/20 transition-colors"
              style={{color: '#00FF99'}}
            >
              {isOpen ? '‚óÄ' : '‚ñ∂'}
            </button>
          </div>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é */}
        <nav className="flex-1 p-2">
          <ul className="space-y-2">
            {menuItems.map((item) => {
              const isActive = pathname === item.href;
              
              return (
                <li key={item.href}>
                  <Link
                    href={item.href as any}
                    className={`
                      block p-3 rounded-lg transition-all duration-200 group border border-transparent
                      ${isActive 
                        ? 'bg-green-500/20 border-green-500/50 shadow-neon' 
                        : 'hover:bg-green-500/10'
                      }
                    `}
                  >
                    <div className="flex items-center space-x-3">
                      {/* –ò–∫–æ–Ω–∫–∞ */}
                      <span className="text-lg flex-shrink-0">
                        {item.icon}
                      </span>
                      
                      {/* –¢–µ–∫—Å—Ç (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞) */}
                      {isOpen && (
                        <div className="min-w-0 flex-1">
                          <div 
                            className={`font-mono text-sm font-semibold ${
                              isActive ? 'text-white' : 'text-gray-300 group-hover:text-white'
                            }`}
                          >
                            {item.label}
                          </div>
                          <div className="text-xs text-gray-500 truncate">
                            {item.description}
                          </div>
                        </div>
                      )}
                    </div>
                  </Link>
                </li>
              );
            })}
          </ul>
        </nav>

        {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã (–≤–Ω–∏–∑—É) */}
        <div className="p-4 border-t border-green-500/30">
          {isOpen ? (
            <div className="text-xs font-mono space-y-1">
              <div className="flex justify-between">
                <span style={{color: '#B8C5C0'}}>STATUS:</span>
                <span style={{color: '#00FF99'}}>ONLINE</span>
              </div>
              <div className="flex justify-between">
                <span style={{color: '#B8C5C0'}}>PORT:</span>
                <span style={{color: '#00FFCC'}}>3008</span>
              </div>
            </div>
          ) : (
            <div className="text-center">
              <div className="w-2 h-2 rounded-full mx-auto animate-pulse" style={{backgroundColor: '#00FF99'}} />
            </div>
          )}
        </div>
      </div>
    </div>
  );
}